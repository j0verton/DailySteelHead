{"version":3,"sources":["providers/UserProfileProvider.js","images/steel.svg","pages/Login.js","pages/Register.js","providers/StreakProvider.js","components/games/NTIQuestionCard.js","components/Star.js","components/games/ScoreDisplay.js","components/games/KeySelect.js","components/games/ResultsView.js","components/games/TuningSelect.js","pages/NTIGame.js","components/games/Fretboard.js","components/games/DisplayQuestionDot.js","pages/NTIFBGame.js","components/games/FindUnisonNotes.js","pages/UnisonFinderGame.js","components/landingPage/ActivityFeed.js","components/landingPage/Leaderboard.js","pages/LandingPage.js","pages/ProfileView.js","components/ApplicationViews.js","components/AppHeader.js","App.js","reportWebVitals.js","index.js"],"names":["UserProfileContext","createContext","UserProfileProvider","props","apiUrl","userProfile","localStorage","getItem","useState","isLoggedIn","setIsLoggedIn","isFirebaseReady","setIsFirebaseReady","useEffect","firebase","auth","onAuthStateChanged","u","getToken","currentUser","getIdToken","getUserProfile","firebaseUserId","then","token","fetch","method","headers","Authorization","resp","json","saveUser","body","JSON","stringify","getCurrentUser","user","parse","Provider","value","login","email","pw","signInWithEmailAndPassword","signInResponse","uid","UserStatusId","console","log","setItem","logout","signOut","clear","register","password","createUserWithEmailAndPassword","createResponse","savedUserProfile","isAdmin","userTypeId","children","Spinner","className","Login","useContext","loading","setLoading","setEmail","setPassword","history","useHistory","onSubmit","e","preventDefault","userStatusId","toast","info","username","push","catch","err","error","src","steel","alt","Input","onChange","target","type","name","placeholder","required","Button","block","color","disabled","to","Register","firstName","setFirstName","lastName","setLastName","setUsername","confirm","setConfirm","StreakContext","StreakProvider","streak","setStreak","getStreak","res","NTIQuestionCard","result","isFlipped","scale","vertFlip","convertCharIntervalToNumericInterval","intString","find","interval","stringName","Col","flipDirection","Card","root","questions","slice","id","outcomes","answerList","correctAnswerList","Star","outcome","clastransform","width","height","transform","fill","stroke","strokeWidth","d","ScoreDisplay","game","viewResult","tuning","gameId","Row","m","sm","size","order","offset","map","i","KeySelect","setKey","md","key","ResultsView","setUserProfile","filter","Boolean","length","TuningSelect","setTuning","tunings","setTunings","NTIGame","setGame","setViewResult","setResult","setIsFlipped","steps","buttonName","startGame","answerQuestion","answer","gameReturn","resultId","questionNumbers","join","complete","a","AnswerHandler","onClick","Fretboard","gameComponent","style","marker","display","overflow","fillRule","DisplayQuestionDot","fretboard","intFretboard","fret","note","j","cx","cy","r","visibility","NTIFBGame","FindUnisonNotes","answers","setAnswers","updateOutcomes","noteTarget","setNoteTarget","chromaticFretboard","coordinates","question","coordiNote","handleNoteClick","split","coords","updatedAnswers","classList","contains","pointerEvents","UnisonFinderGame","setOutcomes","bool","newOutcomes","ActivityFeed","activity","CardHeader","xs","Media","imageLocation","Leaderboard","leaders","obj","totalDays","LandingPage","data","setData","loadFeedData","resultsForFeed","leaderStreaks","ProfileView","ApplicationViews","path","exact","AppHeader","isOpen","setIsOpen","Navbar","dark","expand","NavbarBrand","tag","Link","logo","NavbarToggler","Nav","Collapse","navbar","NavItem","NavLink","NavbarText","days","App","position","hideProgressBar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UAKaA,G,MAAqBC,2BAE3B,SAASC,EAAoBC,GAClC,IAAMC,EAAS,mBAETC,EAAcC,aAAaC,QAAQ,eAHA,EAILC,mBAAwB,MAAfH,GAJJ,mBAIlCI,EAJkC,KAItBC,EAJsB,OAMKF,oBAAS,GANd,mBAMlCG,EANkC,KAMjBC,EANiB,KAOzCC,qBAAU,WACRC,IAASC,OAAOC,oBAAmB,SAACC,GAClCL,GAAmB,QAEpB,IAEH,IAuCMM,EAAW,kBAAMJ,IAASC,OAAOI,YAAYC,cAE7CC,EAAiB,SAACC,GACtB,OAAOJ,IAAWK,MAAK,SAACC,GAAD,OACrBC,MAAM,GAAD,OAAIrB,EAAJ,YAAckB,GAAkB,CACnCI,OAAQ,MACRC,QAAS,CACPC,cAAc,UAAD,OAAYJ,MAE1BD,MAAK,SAACM,GAAD,OAAUA,EAAKC,cAIrBC,EAAW,SAAC1B,GAChB,OAAOa,IAAWK,MAAK,SAACC,GAAD,OACrBC,MAAMrB,EAAQ,CACZsB,OAAQ,OACRC,QAAS,CACPC,cAAc,UAAD,OAAYJ,GACzB,eAAgB,oBAElBQ,KAAMC,KAAKC,UAAU7B,KACpBkB,MAAK,SAACM,GAAD,OAAUA,EAAKC,cAIrBK,EAAiB,WACrB,IAAMC,EAAO9B,aAAaC,QAAQ,eAClC,OAAK6B,EAGEH,KAAKI,MAAMD,GAFT,MAWX,OACE,cAACpC,EAAmBsC,SAApB,CACEC,MAAO,CACL9B,aACA+B,MAnFQ,SAACC,EAAOC,GACpB,OAAO5B,IACJC,OACA4B,2BAA2BF,EAAOC,GAClCnB,MAAK,SAACqB,GAAD,OAAoBvB,EAAeuB,EAAeR,KAAKS,QAC5DtB,MAAK,SAAClB,GAML,OALiC,IAA7BA,EAAYyC,cACdC,QAAQC,IAAI,4BAEd1C,aAAa2C,QAAQ,cAAehB,KAAKC,UAAU7B,IACnDK,GAAc,GACPL,MAyEP6C,OArES,WACb,OAAOpC,IACJC,OACAoC,UACA5B,MAAK,WACJjB,aAAa8C,QACb1C,GAAc,OAgEd2C,SA5DW,SAAChD,EAAaiD,GAC7B,OAAOxC,IACJC,OACAwC,+BAA+BlD,EAAYoC,MAAOa,GAClD/B,MAAK,SAACiC,GAAD,OACJzB,EAAS,2BAAK1B,GAAN,IAAmBiB,eAAgBkC,EAAepB,KAAKS,UAEhEtB,MAAK,SAACkC,GAGL,OAFAnD,aAAa2C,QAAQ,cAAehB,KAAKC,UAAUuB,IACnD/C,GAAc,GACP+C,MAmDPvC,WACAiB,iBACAuB,QAfU,WACd,IAAMtB,EAAOD,IAEb,OAAgB,OAATC,GADa,IACIA,EAAKuB,YAazBtC,kBATJ,SAYGV,EACCR,EAAMyD,SAEJ,cAACC,EAAA,EAAD,CAASC,UAAU,uB,4BCnHd,G,MAAA,IAA0B,mCC0E1BC,EAjED,WAAO,IAAD,EACQC,qBAAWhE,GAA7BwC,EADU,EACVA,MAAOU,EADG,EACHA,OADG,EAEY1C,oBAAS,GAFrB,mBAEXyD,EAFW,KAEFC,EAFE,OAGQ1D,mBAAS,IAHjB,mBAGXiC,EAHW,KAGJ0B,EAHI,OAIc3D,mBAAS,IAJvB,mBAIX8C,EAJW,KAIDc,EAJC,KAKZC,EAAUC,cAiBhB,OACE,qBAAKR,UAAU,aAAf,SACE,uBAAMS,SAjBW,SAACC,GACpBA,EAAEC,iBACFP,GAAW,GACX1B,EAAMC,EAAOa,GACV/B,MAAK,SAACa,GACL8B,GAAW,GACW,IAAtB9B,EAAKsC,aAAqBC,IAAMC,KAAK,2BAA4B1B,KAC7DyB,IAAMC,KAAN,uBAA2BxC,EAAKyC,UAAYR,EAAQS,KAAK,SAE9DC,OAAM,SAACC,GACNd,GAAW,GACXS,IAAMM,MAAM,iCAMd,UACE,qBAAKnB,UAAU,oBAAf,SACE,qBAAKoB,IAAKC,EAAOC,IAAI,aAEvB,oBAAItB,UAAU,cAAd,wBACA,qBAAKA,UAAU,aAAf,SACE,cAACuB,EAAA,EAAD,CACEC,SAAU,SAACd,GAAD,OAAOL,EAASK,EAAEe,OAAOhD,QACnCiD,KAAK,QACL1B,UAAU,eACV2B,KAAK,QACLC,YAAY,QACZC,SAAS,eAGb,qBAAK7B,UAAU,aAAf,SACE,cAACuB,EAAA,EAAD,CACEC,SAAU,SAACd,GAAD,OAAOJ,EAAYI,EAAEe,OAAOhD,QACtCiD,KAAK,WACL1B,UAAU,eACV2B,KAAK,WACLC,YAAY,WACZC,SAAS,eAGb,qBAAK7B,UAAU,aAAf,SACE,cAAC8B,EAAA,EAAD,CAAQJ,KAAK,SAASK,OAAK,EAACC,MAAM,SAASC,SAAU9B,EAArD,uBAIF,sBAAKH,UAAU,oBAAf,mCAEE,8BACE,cAAC,IAAD,CAAMkC,GAAG,YAAT,qCC+DGC,EAzHE,WAAO,IACd5C,EAAaW,qBAAWhE,GAAxBqD,SADa,EAES7C,oBAAS,GAFlB,mBAEdyD,EAFc,KAELC,EAFK,OAGa1D,mBAAS,IAHtB,mBAGd0F,EAHc,KAGHC,EAHG,OAIW3F,mBAAS,IAJpB,mBAId4F,EAJc,KAIJC,EAJI,OAKW7F,mBAAS,IALpB,mBAKdqE,EALc,KAKJyB,EALI,OAMK9F,mBAAS,IANd,mBAMdiC,EANc,KAMP0B,EANO,OAOW3D,mBAAS,IAPpB,mBAOd8C,EAPc,KAOJc,EAPI,OAQS5D,mBAAS,IARlB,mBAQd+F,EARc,KAQLC,EARK,KASfnC,EAAUC,cA6BhB,OACE,qBAAKR,UAAU,aAAf,SACE,uBAAMS,SA7BW,SAACC,IACpBA,EAAEC,iBAEEnB,IAAaiD,IAKjBrC,GAAW,GAOXb,EANgB,CACd6C,YACAE,WACAvB,WACApC,SAEgBa,GACf/B,MAAK,SAACa,GACL8B,GAAW,GACXS,IAAMC,KAAN,kBAAsBxC,EAAKyC,WAC3BR,EAAQS,KAAK,QAEdC,OAAM,SAACC,GACNd,GAAW,GACXS,IAAMM,MAAM,qBAnBdN,IAAMM,MAAM,2BAyBZ,UACE,qBAAKnB,UAAU,oBAAf,SACE,qBAAKoB,IAAKC,EAAOC,IAAI,cAEvB,oBAAItB,UAAU,cAAd,2BACA,qBAAKA,UAAU,aAAf,SACE,cAACuB,EAAA,EAAD,CACEC,SAAU,SAACd,GAAD,OAAO2B,EAAa3B,EAAEe,OAAOhD,QACvCiD,KAAK,OACL1B,UAAU,eACV2B,KAAK,YACLC,YAAY,aACZC,SAAS,eAGb,qBAAK7B,UAAU,aAAf,SACE,cAACuB,EAAA,EAAD,CACEC,SAAU,SAACd,GAAD,OAAO6B,EAAY7B,EAAEe,OAAOhD,QACtCiD,KAAK,OACL1B,UAAU,eACV2B,KAAK,WACLC,YAAY,YACZC,SAAS,eAGb,qBAAK7B,UAAU,aAAf,SACE,cAACuB,EAAA,EAAD,CACEC,SAAU,SAACd,GAAD,OAAO8B,EAAY9B,EAAEe,OAAOhD,QACtCiD,KAAK,OACL1B,UAAU,eACV2B,KAAK,WACLC,YAAY,WACZC,SAAS,eAGb,qBAAK7B,UAAU,aAAf,SACE,cAACuB,EAAA,EAAD,CACEC,SAAU,SAACd,GAAD,OAAOL,EAASK,EAAEe,OAAOhD,QACnCiD,KAAK,QACL1B,UAAU,eACV2B,KAAK,QACLC,YAAY,QACZC,SAAS,eAGb,qBAAK7B,UAAU,aAAf,SACE,cAACuB,EAAA,EAAD,CACEC,SAAU,SAACd,GAAD,OAAOJ,EAAYI,EAAEe,OAAOhD,QACtCiD,KAAK,WACL1B,UAAU,eACV2B,KAAK,WACLC,YAAY,WACZC,SAAS,eAGb,qBAAK7B,UAAU,aAAf,SACE,cAACuB,EAAA,EAAD,CACEC,SAAU,SAACd,GAAD,OAAOgC,EAAWhC,EAAEe,OAAOhD,QACrCiD,KAAK,WACL1B,UAAU,eACV2B,KAAK,kBACLC,YAAY,mBACZC,SAAS,eAGb,qBAAK7B,UAAU,aAAf,SACE,cAAC8B,EAAA,EAAD,CAAQJ,KAAK,SAASK,OAAK,EAACC,MAAM,SAASC,SAAU9B,EAArD,uBAIF,sBAAKH,UAAU,oBAAf,qCAEE,8BACE,cAAC,IAAD,CAAMkC,GAAG,SAAT,oC,iCCrHCS,G,MAAgBxG,2BAEtB,SAASyG,EAAevG,GAAQ,IAC3Be,EAAa8C,qBAAWhE,GAAxBkB,SAD0B,EAENV,qBAFM,mBAE3BmG,EAF2B,KAEnBC,EAFmB,KAkBlC,OACI,cAACH,EAAcnE,SAAf,CAAwBC,MAAO,CAAEoE,SAAQE,UAf3B,WACd3F,IAAWK,MAAK,SAACC,GACb,OAAOC,MAAM,cAAe,CACxBC,OAAQ,MACRC,QAAS,CACLC,cAAc,UAAD,OAAYJ,SAGlCD,MAAK,SAAAuF,GAAG,OAAIA,EAAIhF,UACdP,MAAK,SAAAuF,GACFF,EAAUE,QAKlB,SACK3G,EAAMyD,W,6BC2DJmD,G,MA9ES,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MAAY,EAG1B1G,oBAAS,GAHiB,mBAG/C2G,EAH+C,KAWhDC,GAXgD,KAWT,SAACC,GAE1C,OADmBH,EAAMI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,aAAeH,KAChDE,WAetB,OACI,cAACE,EAAA,EAAD,CAAK3D,UAAU,gCAAf,SACI,eAAC,IAAD,CAEImD,UAAWA,EACXS,cAAeP,EAAW,WAAa,aAH3C,UAII,eAACQ,EAAA,EAAD,CAAM7D,UAAU,yCAAhB,8BACqB,uBACjB,6BAAKkD,EAAOA,OAAOY,OAFvB,QAGa,uBACT,uCAAUZ,EAAOa,UAAUC,OAAO,GAAG,GAAG,MAJ5C,KAKU,uBACN,yCAAYd,EAAOa,UAAUC,OAAO,GAAG,GAAG,GAAK,QAKnD,cAACH,EAAA,EAAD,CAAMI,GAAG,WAAWjE,UAAWkD,EAAOgB,SAAWhB,EAAOgB,SAASF,OAAO,GAAG,GAAK,wDAA0D,2DAA6D,KAAvM,SACKd,EAAOgB,SAAY,qCACfhB,EAAOgB,SAASF,OAAO,GAAG,GACvB,0CACE,4CACN,uCAAUd,EAAOa,UAAUC,OAAO,GAAI,GAAG,GAAG,GAA5C,YAAyDd,EAAOa,UAAUC,OAAO,GAAI,GAAG,GAAG,GAAK,KAJhF,SAKV,uBACLd,EAAOgB,SAASF,OAAO,GAAG,GAGnB,oBAAIhE,UAAU,eAAd,SACKsD,EAAqCJ,EAAOiB,WAAWH,OAAO,GAAG,MAItE,qCACI,oBAAIhE,UAAU,iBAAd,SACKsD,EAAqCJ,EAAOiB,WAAWH,OAAO,GAAG,MAEtE,6BACKV,EAAqCJ,EAAOkB,kBAAkBJ,OAAO,GAAI,GAAG,SAG7F,4CAAed,EAAOA,OAAOY,WAC1B,c,QC5DZO,MAdf,YAA4B,IAAZC,EAAW,EAAXA,QACZ,OACI,qBAAKC,cAAc,YAAYC,MAAO,IAAKC,OAAQ,IAAnD,SACI,sBACIC,UAAU,0BACVC,KAAML,EAAU,UAAY,UAC5BM,OAAO,UACPC,YAAa,GACbC,EAAE,iECiBHC,EArBM,SAAC,GAA4C,IAA1C7B,EAAyC,EAAzCA,OAAQ8B,EAAiC,EAAjCA,KAAMd,EAA2B,EAA3BA,SAAUe,EAAiB,EAAjBA,WAE5C,OACI,mCAEQ/B,EAAOA,QAAUgB,EACb,qCACI,+BAAKhB,EAAOA,OAAOgC,OAAOvD,KAA+B,IAAzBuB,EAAOA,OAAOiC,QAAyC,IAAzBjC,EAAOA,OAAOiC,OAA5C,mBAAuEjC,EAAOA,OAAOY,MAAS,QAC9H,cAACsB,EAAA,EAAD,CAAKC,EAAE,IAAP,SACI,cAAC1B,EAAA,EAAD,CAAK2B,GAAI,CAAEC,KAAM,GAAIC,MAAO,EAAGC,OAAQ,GAAKzF,UAAU,qBAAtD,SACKkE,EAASwB,KAAI,SAACpB,EAASqB,GACpB,OAAO,cAAC,EAAD,CAAcrB,QAASA,GAAZqB,aAKhCX,EAAO,+BAAK9B,EAAOA,OAAOgC,OAAOvD,KAA+B,IAAzBuB,EAAOA,OAAOiC,QAAyC,IAAzBjC,EAAOA,OAAOiC,OAA5C,mBAAuEjC,EAAOA,OAAOY,MAAS,QAAamB,EAAa,KAAO,yECI7KW,EAvBG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAQjB,OACI,cAAClC,EAAA,EAAD,CAAK2B,GAAG,KAAKQ,GAAI,CAAEP,KAAM,EAAGE,OAAQ,GAApC,SACI,cAAClE,EAAA,EAAD,CAAOG,KAAK,SACRC,KAAK,YACLsC,GAAG,YACHjE,UAAU,mBACVwB,SAZS,SAAAd,GACjBmF,EAAOnF,EAAEe,OAAOhD,QAOZ,SAHK,CAAC,IAAK,KAAM,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,IAAK,KAAM,KAQlDiH,KAAI,SAAAK,GAAG,OACT,wBAAQtH,MAAOsH,EAAf,SAA+BA,GAANA,WCU9BC,EAzBK,SAAC,GAAkC,IAAhC9C,EAA+B,EAA/BA,OAAQ8B,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAAiB,EACZvI,mBAAS,IADG,mBAC3CH,EAD2C,KAC9B0J,EAD8B,KAE1C5H,EAAmB6B,qBAAWhE,GAA9BmC,eAQR,OANAtB,qBAAU,WACNkJ,EAAe5H,OAEhB,IAIC,mCAEQ6E,EAAOgB,SACH,qCACI,oEACA,mCAAM3H,EAAY6F,UAAlB,OACA,0CAAac,EAAOgB,SAASgC,OAAOC,SAASC,OAA7C,iBAAmElD,EAAOgB,SAASkC,OAAnF,eACA,cAAC,EAAD,CAAclD,OAAQA,EAAQ8B,KAAMA,EAAMC,WAAYA,OAExD,QCyBPoB,EA7CM,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACZlJ,EAAa8C,qBAAWhE,GAAxBkB,SAD4B,EAENV,qBAFM,mBAE7B6J,EAF6B,KAEpBC,EAFoB,KA0BpC,OAHAzJ,qBAAU,WAdCK,IACFK,MAAK,SAAAC,GAAK,OACPC,MAAM,oBAAqB,CACvBC,OAAQ,MACRC,QAAS,CACLC,cAAc,UAAD,OAAYJ,SAGnCD,MAAK,SAAAuF,GAAG,OAAIA,EAAIhF,UACjBP,MAAK,SAAAuF,GACFwD,EAAWxD,QAMpB,IAEC,mCACKuD,EACG,cAAC5C,EAAA,EAAD,CAAK2B,GAAG,KAAKQ,GAAI,CAAEP,KAAM,EAAGE,OAAQ,GAApC,SACI,cAAClE,EAAA,EAAD,CAAOG,KAAK,SACRC,KAAK,eACLsC,GAAG,eACHjE,UAAU,mBACVwB,SA9BC,SAAAd,GACjB4F,EAAU5F,EAAEe,OAAOhD,QAyBP,SAKK8H,EAAQb,KAAI,SAAAR,GAAM,OACf,wBAAQzG,MAAOyG,EAAOjB,GAAtB,SAA2CiB,EAAOvD,MAAnBuD,EAAOjB,WAIhD,QCiGHwC,EAhIC,WAAO,IACXrJ,EAAa8C,qBAAWhE,GAAxBkB,SACA2F,EAAc7C,qBAAWyC,GAAzBI,UAFU,EAIMrG,oBAAS,GAJf,mBAIXsI,EAJW,KAIL0B,EAJK,OAKkBhK,oBAAS,GAL3B,mBAKXuI,EALW,KAKC0B,EALD,OAMIjK,mBAAS,KANb,mBAMXqJ,EANW,KAMNF,EANM,OAOUnJ,mBAAS,GAPnB,mBAOXwI,EAPW,KAOHoB,EAPG,OAQU5J,mBAAS,IARnB,mBAQXwG,EARW,KAQH0D,EARG,OASgBlK,oBAAS,GATzB,mBASXyG,EATW,KASA0D,EATA,KAUZzD,EAAQ,CACV,CAAE0D,MAAO,EAAGC,WAAY,IAAKtD,SAAU,MAAOC,WAAY,OAC1D,CAAEoD,MAAO,EAAGC,WAAY,KAAMtD,SAAU,OAAQC,WAAY,WAC5D,CAAEoD,MAAO,EAAGC,WAAY,IAAKtD,SAAU,MAAOC,WAAY,OAC1D,CAAEoD,MAAO,EAAGC,WAAY,KAAMtD,SAAU,OAAQC,WAAY,aAC5D,CAAEoD,MAAO,EAAGC,WAAY,IAAKtD,SAAU,MAAOC,WAAY,SAC1D,CAAEoD,MAAO,EAAGC,WAAY,IAAKtD,SAAU,MAAOC,WAAY,QAC1D,CAAEoD,MAAO,EAAGC,WAAY,KAAMtD,SAAU,OAAQC,WAAY,YAC5D,CAAEoD,MAAO,EAAGC,WAAY,IAAKtD,SAAU,MAAOC,WAAY,QAC1D,CAAEoD,MAAO,EAAGC,WAAY,KAAMtD,SAAU,OAAQC,WAAY,WAC5D,CAAEoD,MAAO,GAAIC,WAAY,IAAKtD,SAAU,MAAOC,WAAY,OAC3D,CAAEoD,MAAO,GAAIC,WAAY,KAAMtD,SAAU,OAAQC,WAAY,aAC7D,CAAEoD,MAAO,GAAIC,WAAY,IAAKtD,SAAU,MAAOC,WAAY,UAEzDsD,EAAY,WACd,OAAO5J,IACFK,MAAK,SAAAC,GAAK,OACPC,MAAM,eAAD,OAAgBuH,EAAhB,YAA0Ba,GAAO,CAClCnI,OAAQ,MACRC,QAAS,CACLC,cAAc,UAAD,OAAYJ,SAGnCD,MAAK,SAAAuF,GAAG,OAAIA,EAAIhF,UACjBP,MAAK,SAAAuF,GACF4D,EAAU5D,OAGhBiE,EAAiB,SAACC,GACpB,IAAMC,EAAa,CACfC,SAAUlE,EAAOA,OAAOe,GACxBoD,gBAAiBnE,EAAOa,UAAUC,OAAO,GAAGsD,KAAK,KACjDJ,OAAQA,GAEZ,OAAO9J,IACFK,MAAK,SAAAC,GAAK,OACPC,MAAM,aAAc,CAChBC,OAAQ,OACRC,QAAS,CACLC,cAAc,UAAD,OAAYJ,GACzB,eAAgB,oBAEpBQ,KAAMC,KAAKC,UAAU+I,QAE3B1J,MAAK,SAAAuF,GAAG,OAAIA,EAAIhF,UACjBP,MAAK,SAAAuF,IAC0B,IAAxBA,EAAIE,OAAOqE,WACXZ,GAAc,GACdD,GAAQ,GACR3D,KAEJ6D,EAAU5D,OA7DJ,4CAiElB,sBAAAwE,EAAA,sEACUR,IADV,OAEIN,GAAQ,GAFZ,4CAjEkB,+BAsEHe,EAtEG,8EAsElB,WAA6B/G,GAA7B,SAAA8G,EAAA,sEACUP,EAAevG,EAAEe,OAAOhD,OADlC,OAEIoI,GAAc1D,GAFlB,4CAtEkB,sBA2ElB,OACI,qBAAKnD,UAAU,YAAf,SACKiF,EAAa,qCACV,cAAC,EAAD,CAAa/B,OAAQA,EAAQ8B,KAAMA,EAAMC,WAAYA,IACrD,cAACnD,EAAA,EAAD,CACI4F,QAAS,WACLhB,GAAQ,GACRG,GAAa,GACbF,GAAc,GACdzD,EAAOgB,SAAW,MAL1B,qBAUA,qCACI,qBAAKmB,EAAE,IAAIrF,UAAU,kBAArB,SACI,cAAC,EAAD,CAAckD,OAAQA,EAAQ8B,KAAMA,EAAMd,SAAUhB,EAAOgB,SAAUe,WAAYA,MAErF,qBAAKjF,UAAU,YAAf,SACI,cAAC2D,EAAA,EAAD,CAAK2B,GAAG,KAAKQ,GAAI,CAAEP,KAAM,EAAGE,OAAQ,GAApC,SACKT,EACG,cAAC,EAAD,CAAiB9B,OAAQA,EAAQC,UAAWA,EAAWC,MAAOA,IAC5D,qCACE,cAAC,EAAD,CAAWyC,OAAQA,IACnB,cAAC,EAAD,CAAcS,UAAWA,IACzB,cAACxE,EAAA,EAAD,CAAQ4F,QApGtB,2CAoGc,+BAKhB,qBAAK1H,UAAU,mBAAf,SAEQmD,EAAY,cAACrB,EAAA,EAAD,CACR4F,QAAS,WAELb,GAAa,IAHT,kBAQR7B,EACI5B,EAAMsC,KAAI,SAAAjC,GAAQ,OACd,cAAC3B,EAAA,EAAD,CAA6BrD,MAAOgF,EAASC,WACzCgE,QAASD,EADb,SAEEhE,EAASsD,YAFEtD,EAASqD,UAGrB,aClC1Ba,MAjGf,YAAwD,EAAnCzE,OAAmC,EAA3B0E,cAA4B,IAAb9H,EAAY,EAAZA,SACxC,OACI,sBAAK0E,MAAO,KAAMC,OAAQ,IAA1B,UAEI,sBACII,YAAa,GACbD,OAAO,OACPE,EAAE,sNAGN,sBACIA,EAAE,yUACF+C,MAAO,CACHC,OAAQ,QAEZ9F,MAAM,OACN2C,KAAK,OACLC,OAAO,OACPC,YAAa,OACbkD,QAAQ,QACRC,SAAS,YAGb,sBACIlD,EAAE,8KACFH,KAAK,MACLsD,SAAS,YAEb,sBACInD,EAAE,gQACFH,KAAK,OACLsD,SAAS,UACTrD,OAAO,OACPC,YAAa,SAEjB,sBACIC,EAAE,soBACFH,KAAK,QAET,sBACIG,EAAE,wUACF+C,MAAO,CACHC,OAAQ,QAEZ9F,MAAM,OACN2C,KAAK,OACLC,OAAO,OACPC,YAAa,OACbkD,QAAQ,QACRC,SAAS,YAEb,sBACIlD,EAAE,6KACFH,KAAK,MACLsD,SAAS,YAEb,sBACInD,EAAE,+PACFH,KAAK,OACLsD,SAAS,UACTrD,OAAO,OACPC,YAAa,SAEjB,sBACIC,EAAE,soBACFH,KAAK,QAET,sBACIG,EAAE,gQACFH,KAAK,OACLsD,SAAS,UACTrD,OAAO,OACPC,YAAa,SAEjB,sBACIC,EAAE,uoBACFH,KAAK,QAGT,sBACI3E,UAAU,iBACV2E,KAAK,0BACLG,EAAE,qNAWLhF,MCpEEoI,EAzBY,SAAC,GAAgB,IAAdhF,EAAa,EAAbA,OAE1B,OAAKA,EAAOiF,UAER,mCAEQjF,EAAOiF,UAAUC,aAAa1C,KAAI,SAAC2C,EAAM1C,GACrC,OAAO0C,EAAK3C,KAAI,SAAC4C,EAAMC,GACnB,OACI,wBAEItE,GAAE,gBAAW0B,EAAX,YAAgB4C,GAClBC,GAAI,GAAM,IAAM7C,EAAI8C,GAAI,GAAM,GAAKF,EAAIG,EAAE,KACzC/D,KAAK,UACLgE,WAAahD,IAAMzC,EAAOa,UAAUC,OAAO,GAAG,GAAG,IAAMuE,IAAMrF,EAAOa,UAAUC,OAAO,GAAG,GAAG,GAAM,UAAY,UALjH,UACY2B,EADZ,YACiB4C,YART,MCgIrBK,EAvHG,WAAO,IACbxL,EAAa8C,qBAAWhE,GAAxBkB,SADY,EAEIV,oBAAS,GAFb,mBAEbsI,EAFa,KAEP0B,EAFO,OAGgBhK,oBAAS,GAHzB,mBAGbuI,EAHa,KAGD0B,EAHC,OAIEjK,mBAAS,KAJX,mBAIbqJ,EAJa,KAIRF,EAJQ,OAKQnJ,mBAAS,GALjB,mBAKbwI,EALa,KAKLoB,EALK,OAOQ5J,mBAAS,IAPjB,mBAObwG,EAPa,KAOL0D,EAPK,OAQclK,oBAAS,GARvB,mBAQbyG,EARa,KAQF0D,EARE,KAwBdG,EAAY,WACd,OAAO5J,IACFK,MAAK,SAAAC,GAAK,OACPC,MAAM,eAAD,OAAgBuH,EAAhB,YAA0Ba,GAAO,CAClCnI,OAAQ,MACRC,QAAS,CACLC,cAAc,UAAD,OAAYJ,SAGnCD,MAAK,SAAAuF,GAAG,OAAIA,EAAIhF,UACjBP,MAAK,SAAAuF,GACF4D,EAAU5D,OAIhBiE,EAAiB,SAACC,GACpB,IAAMC,EAAa,CACfC,SAAUlE,EAAOA,OAAOe,GACxBoD,gBAAiBnE,EAAOa,UAAUC,OAAO,GAAGsD,KAAK,KACjDJ,OAAQA,GAEZ,OAAO9J,IACFK,MAAK,SAAAC,GAAK,OACPC,MAAM,aAAc,CAChBC,OAAQ,OACRC,QAAS,CACLC,cAAc,UAAD,OAAYJ,GACzB,eAAgB,oBAEpBQ,KAAMC,KAAKC,UAAU+I,QAE3B1J,MAAK,SAAAuF,GAAG,OAAIA,EAAIhF,UACjBP,MAAK,SAAAuF,IAC0B,IAAxBA,EAAIE,OAAOqE,WACXZ,GAAc,GACdD,GAAQ,IAEZE,EAAU5D,OA7DF,4CAiEpB,sBAAAwE,EAAA,sEACUR,IADV,OAEIN,GAAQ,GAFZ,4CAjEoB,+BAqELe,EArEK,8EAqEpB,WAA6B/G,GAA7B,SAAA8G,EAAA,sEACUP,EAAevG,EAAEe,OAAOhD,OADlC,OAEIoI,GAAc1D,GAFlB,4CArEoB,sBA0EpB,OACI,qBAAKnD,UAAU,YAAf,SACKiF,EAAa,qCACV,cAAC,EAAD,CAAa/B,OAAQA,EAAQ8B,KAAMA,IACnC,cAAClD,EAAA,EAAD,CACI4F,QAAS,WACLhB,GAAQ,GACRG,GAAa,GACbF,GAAc,GACdzD,EAAOgB,SAAW,MAL1B,qBAUA,qCACI,qBAAKmB,EAAE,IAAIrF,UAAU,kBAArB,SACI,cAAC,EAAD,CAAckD,OAAQA,EAAQ8B,KAAMA,EAAMd,SAAUhB,EAAOgB,aAE/D,sBAAKlE,UAAU,sBAAf,UACKgF,EAAO,KAAO,qCACX,cAAC,EAAD,CAAWa,OAAQA,IACnB,cAAC,EAAD,CAAcS,UAAWA,IACzB,cAACxE,EAAA,EAAD,CAAQ4F,QAhGZ,2CAgGI,2BAIJ,cAAC,EAAD,CAAWxE,OAAQA,EAAQ0E,cAAeM,EAA1C,SAA8D,cAAC,EAAD,CAAoBhF,OAAQA,SAE9F,qBAAKlD,UAAU,mBAAf,SAEQmD,EAAY,cAACrB,EAAA,EAAD,CAAQ4F,QAAS,kBAAMb,GAAa,IAApC,kBAER7B,EAjGd,CACV,CAAE8B,MAAO,EAAGC,WAAY,IAAKtD,SAAU,MAAOC,WAAY,OAC1D,CAAEoD,MAAO,EAAGC,WAAY,KAAMtD,SAAU,OAAQC,WAAY,WAC5D,CAAEoD,MAAO,EAAGC,WAAY,IAAKtD,SAAU,MAAOC,WAAY,OAC1D,CAAEoD,MAAO,EAAGC,WAAY,KAAMtD,SAAU,OAAQC,WAAY,aAC5D,CAAEoD,MAAO,EAAGC,WAAY,IAAKtD,SAAU,MAAOC,WAAY,SAC1D,CAAEoD,MAAO,EAAGC,WAAY,IAAKtD,SAAU,MAAOC,WAAY,QAC1D,CAAEoD,MAAO,EAAGC,WAAY,KAAMtD,SAAU,OAAQC,WAAY,YAC5D,CAAEoD,MAAO,EAAGC,WAAY,IAAKtD,SAAU,MAAOC,WAAY,QAC1D,CAAEoD,MAAO,EAAGC,WAAY,KAAMtD,SAAU,OAAQC,WAAY,WAC5D,CAAEoD,MAAO,GAAIC,WAAY,IAAKtD,SAAU,MAAOC,WAAY,OAC3D,CAAEoD,MAAO,GAAIC,WAAY,KAAMtD,SAAU,OAAQC,WAAY,aAC7D,CAAEoD,MAAO,GAAIC,WAAY,IAAKtD,SAAU,MAAOC,WAAY,UAsFzBgC,KAAI,SAAAjC,GAAQ,OACd,cAAC3B,EAAA,EAAD,CAA6BrD,MAAOgF,EAASC,WACzCgE,QAASD,EADb,SAEEhE,EAASsD,YAFEtD,EAASqD,UAGrB,a,MCrE1B+B,MApDf,YAA2E,IAAhD3F,EAA+C,EAA/CA,OAAQ4F,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,eAAkB,EAClCtM,qBADkC,mBAC/DuM,EAD+D,KACnDC,EADmD,KAGtEnM,qBAAU,WACN,GAAImG,EAAOiG,mBAAoB,CAC3B,IAAMC,EAAclG,EAAOmG,SACrBC,EAAapG,EAAOiG,mBAAmBhB,UAAUiB,EAAY,IAAIA,EAAY,IACnFF,EAAcI,MAEnB,CAACpG,IAEJ,IAAMqG,EAAkB,SAAA7I,GACpBA,EAAEe,OAAOoG,MAAMc,WAAa,UADH,MAEAjI,EAAEe,OAAOwC,GAAGuF,MAAM,MAFlB,mBAEVC,GAFU,WAGrBC,EAAiB,GACE,IAAnBZ,EAAQ1C,OACRsD,EAAiBD,EACVX,EAAQ1C,QAAU,IAEzBsD,EAAiBZ,GAAO,WAAQW,IAEpCV,EAAWW,GACPhJ,EAAEe,OAAOkI,UAAUC,SAAS,aAC5BZ,GAAe,GACRtI,EAAEe,OAAOkI,UAAUC,SAAS,YACnCZ,GAAe,IAIvB,OACI,mCACK9F,EAAOiG,mBAAqBjG,EAAOiG,mBAAmBhB,UAAUzC,KAAI,SAAC2C,EAAM1C,GACxE,OAAO0C,EAAK3C,KAAI,SAAC4C,EAAMC,GACnB,OACI,wBACIsB,cAAc,eAEd5F,GAAE,gBAAW0B,EAAX,YAAgB4C,GAClBvI,UAAWiJ,IAAe/F,EAAOiG,mBAAmBhB,UAAUxC,GAAG4C,GAAK,UAAY,YAElFC,GAAI,GAAM,IAAM7C,EAAI8C,GAAI,GAAM,GAAKF,EAAIG,EAAE,KAEzCC,WAAahD,IAAMzC,EAAOmG,SAAS,IAAMd,IAAMrF,EAAOmG,SAAS,GAAM,UAAY,SAEjF3B,QAAS6B,GAVb,UAEY5D,EAFZ,YAEiB4C,UAYxB,QCqDFuB,EA9FU,WAAO,IACpB1M,EAAa8C,qBAAWhE,GAAxBkB,SADmB,EAEHV,oBAAS,GAFN,mBAEpBsI,EAFoB,KAEd0B,EAFc,OAGShK,oBAAS,GAHlB,mBAGpBuI,EAHoB,KAGR0B,EAHQ,OAICjK,mBAAS,IAJV,mBAIpBwG,EAJoB,KAIZ0D,EAJY,OAKGlK,mBAAS,IALZ,mBAKpBoM,EALoB,KAKXC,EALW,OAMKrM,mBAAS,IANd,mBAMpBwH,EANoB,KAMV6F,EANU,KASrB/C,EAAY,WACd,OAAO5J,IACFK,MAAK,SAAAC,GAAK,OACPC,MAAM,mBAAoB,CACtBC,OAAQ,MACRC,QAAS,CACLC,cAAc,UAAD,OAAYJ,SAGnCD,MAAK,SAAAuF,GAAG,OAAIA,EAAIhF,UACjBP,MAAK,SAAAuF,GACF4D,EAAU5D,OApBK,4CAuD3B,sBAAAwE,EAAA,sEACUR,IADV,OAEIN,GAAQ,GAFZ,4CAvD2B,sBA4D3B,OACI,qBAAK1G,UAAU,YAAf,SACKiF,EAAa,qCACV,cAAC,EAAD,CAAa/B,OAAQA,EAAQ8B,KAAMA,IACnC,cAAClD,EAAA,EAAD,CACI4F,QAAS,WACLhB,GAAQ,GACRC,GAAc,GACdoC,EAAW,IACXgB,EAAY,OALpB,2BAUA,qCACI,qBAAK1E,EAAE,IAAIrF,UAAU,kBAArB,SAEI,cAAC,EAAD,CAAckD,OAAQA,EAAQ8B,KAAMA,EAAMd,SAAUA,MAExD,sBAAKlE,UAAU,sBAAf,UACKgF,EAAO8D,EAAQ1C,OAAS,EAAI,KAAO,mFAC9B,mCACE,cAACtE,EAAA,EAAD,CAAQ4F,QAlFT,2CAkFC,0BAGR,cAAC,EAAD,CAAWxE,OAAQA,EAAnB,SAA4B,cAAC,EAAD,CAAiB8F,eA7D1C,SAACgB,GACpB,IAAMC,EAAc/F,EAASF,QAC7BiG,EAAYjJ,KAAKgJ,GACjBD,EAAYE,IA0DiF/G,OAAQA,EAAQ4F,QAASA,EAASC,WAAYA,SAG7HD,EAAQ1C,OAAS,GAAI0C,EAAQU,MAAM,KAAKpD,OAAS,GAAK,cAACtE,EAAA,EAAD,CAAQ4F,QA1D3D,WACjB,IAAMP,EAAa,CACfC,SAAUlE,EAAOA,OAAOe,GACxBiD,OAAQ4B,GAEZ,OAAO1L,IACFK,MAAK,SAAAC,GAAK,OACPC,MAAM,mBAAoB,CACtBC,OAAQ,OACRC,QAAS,CACLC,cAAc,UAAD,OAAYJ,GACzB,eAAgB,oBAEpBQ,KAAMC,KAAKC,UAAU+I,QAE3B1J,MAAK,SAAAuF,GAAG,OAAIA,EAAIhF,UACjBP,MAAK,SAAAuF,IAC0B,IAAxBA,EAAIE,OAAOqE,WACXZ,GAAc,GACdD,GAAQ,IAEZE,EAAU5D,OAqCkD,oBAAwD,W,gBCjGvHkH,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAE3B,OACI,8BAEQA,EAAWA,EAASzE,KAAI,SAAAxC,GACpB,OAAQ,eAACW,EAAA,EAAD,CAA6B7D,UAAU,OAAvC,UAEJ,cAACoK,EAAA,EAAD,UAAY,oBAAIpK,UAAU,YAAd,SAA2BkD,EAAOA,OAAO3G,YAAYwE,aACjE,eAACqE,EAAA,EAAD,WACI,cAACzB,EAAA,EAAD,CAAK0G,GAAG,IAAR,SACI,cAACC,EAAA,EAAD,CAAOlJ,IAAK8B,EAAOA,OAAO3G,YAAYgO,cAAejJ,IAAI,oBAE7D,eAACqC,EAAA,EAAD,CAAK0G,GAAG,IAAR,oBACW,6BAAKnH,EAAOA,OAAO8B,KAAKrD,OADnC,cAEe,+BAAKuB,EAAOgB,SAASgC,OAAOC,SAASC,OAArC,MAAgDlD,EAAOgB,SAASkC,kBATpElD,EAAOA,OAAOe,OAehC,QCpBRuG,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAE1B,OACI,8BAEQA,EAAUA,EAAQ/E,KAAI,SAACgF,GACnB,OACI,cAAC7G,EAAA,EAAD,UACI,eAACuG,EAAA,EAAD,WAAaM,EAAItE,OAAOuE,UAAxB,WAA2CD,EAAI7H,OAAOtG,YAAYwE,SAAlE,QADO2J,EAAI7H,OAAOoB,OAKxB,QCPT2G,EAAc,WACJ1K,qBAAWyC,GAAtBE,OADsB,IAAD,EAEQ3C,qBAAWhE,GAAxCkB,EAFqB,EAErBA,SAFqB,KAEXiB,eACM3B,mBAAS,KAHJ,mBAGtBmO,EAHsB,KAGhBC,EAHgB,KAI7B/N,qBAAU,WACFP,aAAaC,QAAQ,gBAErBsO,MAGL,IAEH,IAAMA,EAAe,WACjB,OAAO3N,IACFK,MAAK,SAAAC,GAAK,OACPC,MAAM,0BAA2B,CAC7BC,OAAQ,MACRC,QAAS,CACLC,cAAc,UAAD,OAAYJ,SAGnCD,MAAK,SAAAuF,GAAG,OAAIA,EAAIhF,UACjBP,MAAK,SAAAuF,GACF8H,EAAQ9H,OAGpB,OACI,8BACI,eAAEoC,EAAA,EAAF,WACI,eAACzB,EAAA,EAAD,CAAK3D,UAAU,OAAf,UACI,iDACA,cAAC,EAAD,CAAcmK,SAAUU,EAAKG,oBAEjC,eAACrH,EAAA,EAAD,WACI,cAACyB,EAAA,EAAD,UACI,eAACzB,EAAA,EAAD,CAAK2B,GAAG,KAAKQ,GAAI,CAAEP,KAAM,EAAGE,OAAQ,GAApC,UACI,sDACA,mFACA,yDAEA,sKAGR,uBACA,cAACL,EAAA,EAAD,UACI,4DAEJ,uBACA,cAAC,EAAD,CAAaqF,QAASI,EAAKI,yBCpDlCC,EAAc,WAEvB,OACI,cAACrH,EAAA,EAAD,4BCmCOsH,EA9BU,WAAO,IACtBxO,EAAeuD,qBAAWhE,GAA1BS,WAER,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyO,KAAK,IAAIC,OAAK,EAArB,SACG1O,EAAa,cAAC,EAAD,IAAkB,cAAC,IAAD,CAAUuF,GAAG,aAE/C,cAAC,IAAD,CAAOkJ,KAAK,WAAZ,SACGzO,EAAa,cAAC,EAAD,IAAc,cAAC,IAAD,CAAUuF,GAAG,aAE3C,cAAC,IAAD,CAAOkJ,KAAK,oBAAZ,SACGzO,EAAa,cAAC,EAAD,IAAgB,cAAC,IAAD,CAAUuF,GAAG,aAE7C,cAAC,IAAD,CAAOkJ,KAAK,oBAAZ,SACGzO,EAAa,cAAC,EAAD,IAAuB,cAAC,IAAD,CAAUuF,GAAG,aAEpD,cAAC,IAAD,CAAOkJ,KAAK,aAAZ,SACGzO,EAAa,cAAC,EAAD,IAAkB,cAAC,IAAD,CAAUuF,GAAG,aAE/C,cAAC,IAAD,CAAOkJ,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,EAAD,U,mFCoFOE,GArGG,WAAO,IAAD,EACapL,qBAAWhE,GAAtCmC,EADc,EACdA,eAAgBe,EADF,EACEA,OADF,EAEQc,qBAAWyC,GAAjCI,EAFc,EAEdA,UAAWF,EAFG,EAEHA,OACbvE,EAAOD,IACPkC,EAAUC,cAJM,EAKM9D,oBAAS,GALf,mBAKf6O,EALe,KAKPC,EALO,KAoBtB,OAJAzO,qBAAU,WACJuB,GAAQyE,MACX,IAGD,8BACE,eAAC0I,EAAA,EAAD,CAAQzJ,MAAM,OAAO0J,MAAI,EAACC,OAAO,KAAjC,UACE,cAACC,EAAA,EAAD,CAAaC,IAAKC,IAAM5J,GAAG,IAA3B,SACE,qBACE+B,GAAG,cACH7C,IAAK2K,EACLvH,MAAM,KACNC,OAAO,KACPzE,UAAU,OACVsB,IAAI,kBAGR,cAAC0K,EAAA,EAAD,CAAetE,QA1BN,kBAAM8D,GAAWD,MA2B1B,eAACU,GAAA,EAAD,CAAKjM,UAAU,uCAAf,UACE,cAACkM,GAAA,EAAD,CAAUX,OAAQA,EAAQY,QAAM,EAAhC,SACE,cAACF,GAAA,EAAD,CAAKE,QAAM,EAAX,SACG7N,EACC,qCACE,cAAC8N,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAASnK,GAAG,WAAW2J,IAAKC,IAA5B,8CAIF,cAACM,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAASnK,GAAG,oBAAoB2J,IAAKC,IAArC,4CAIF,cAACM,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAASnK,GAAG,oBAAoB2J,IAAKC,IAArC,6BAIF,cAACM,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAASnK,GAAG,aAAa2J,IAAKC,IAA9B,0BAIF,cAACM,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAASR,IAAKC,IAAM5J,GAAG,IAAIwF,QAnDrB,WACtB,OAAOtI,IAAS3B,MAAK,WACnBoD,IAAM6K,KAAK,0BACXnL,EAAQS,KAAK,cAgDC,yBAMF,qCACE,cAACoL,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAASnK,GAAG,SAAS2J,IAAKC,IAA1B,qBAIF,cAACM,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAASnK,GAAG,YAAY2J,IAAKC,IAA7B,+BAQXxN,EACC,eAAC2N,GAAA,EAAD,CAAKjM,UAAU,2BAAf,UACE,eAACsM,GAAA,EAAD,CAAYtM,UAAU,uBAAtB,qBACW1B,EAAK8D,aAIdS,GAASA,EAAOuD,OACd,eAACkG,GAAA,EAAD,CAAYtM,UAAU,uBAAtB,gCACsB6C,EAAOuD,OAAOmG,QACb,QAG3B,cCtFCC,OAjBf,WAEE,OACE,sBAAKxM,UAAU,MAAf,UACE,cAAC,IAAD,CAAgByM,SAAS,eAAeC,iBAAe,IACvD,cAACtQ,EAAD,UACE,cAACwG,EAAD,UACE,eAAC,IAAD,WACE,cAAC,GAAD,IACA,cAAC,EAAD,eCNG+J,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpP,MAAK,YAAkD,IAA/CqP,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCId5P,IAASmQ,cAHc,CACrBC,OAAQC,4CAIVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bf,O","file":"static/js/main.45821be9.chunk.js","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nexport const UserProfileContext = createContext();\r\n\r\nexport function UserProfileProvider(props) {\r\n  const apiUrl = \"/api/userprofile\";\r\n\r\n  const userProfile = localStorage.getItem(\"userProfile\");\r\n  const [isLoggedIn, setIsLoggedIn] = useState(userProfile != null);\r\n\r\n  const [isFirebaseReady, setIsFirebaseReady] = useState(false);\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((u) => {\r\n      setIsFirebaseReady(true);\r\n    });\r\n  }, []);\r\n\r\n  const login = (email, pw) => {\r\n    return firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, pw)\r\n      .then((signInResponse) => getUserProfile(signInResponse.user.uid))\r\n      .then((userProfile) => {\r\n        if (userProfile.UserStatusId === 2) {\r\n          console.log(\"this account is inactive\")\r\n        }\r\n        localStorage.setItem(\"userProfile\", JSON.stringify(userProfile));\r\n        setIsLoggedIn(true);\r\n        return userProfile;\r\n      });\r\n  };\r\n\r\n  const logout = () => {\r\n    return firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        localStorage.clear();\r\n        setIsLoggedIn(false);\r\n      });\r\n  };\r\n\r\n  const register = (userProfile, password) => {\r\n    return firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(userProfile.email, password)\r\n      .then((createResponse) =>\r\n        saveUser({ ...userProfile, firebaseUserId: createResponse.user.uid })\r\n      )\r\n      .then((savedUserProfile) => {\r\n        localStorage.setItem(\"userProfile\", JSON.stringify(savedUserProfile));\r\n        setIsLoggedIn(true);\r\n        return savedUserProfile;\r\n      });\r\n  };\r\n\r\n  const getToken = () => firebase.auth().currentUser.getIdToken();\r\n\r\n  const getUserProfile = (firebaseUserId) => {\r\n    return getToken().then((token) =>\r\n      fetch(`${apiUrl}/${firebaseUserId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }).then((resp) => resp.json())\r\n    );\r\n  };\r\n\r\n  const saveUser = (userProfile) => {\r\n    return getToken().then((token) =>\r\n      fetch(apiUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(userProfile),\r\n      }).then((resp) => resp.json())\r\n    );\r\n  };\r\n\r\n  const getCurrentUser = () => {\r\n    const user = localStorage.getItem(\"userProfile\");\r\n    if (!user) {\r\n      return null;\r\n    }\r\n    return JSON.parse(user);\r\n  };\r\n\r\n  const isAdmin = () => {\r\n    const user = getCurrentUser();\r\n    const adminTypeId = 1;\r\n    return user !== null && user.userTypeId === adminTypeId;\r\n  };\r\n\r\n  return (\r\n    <UserProfileContext.Provider\r\n      value={{\r\n        isLoggedIn,\r\n        login,\r\n        logout,\r\n        register,\r\n        getToken,\r\n        getCurrentUser,\r\n        isAdmin,\r\n        getUserProfile\r\n      }}\r\n    >\r\n      {isFirebaseReady ? (\r\n        props.children\r\n      ) : (\r\n          <Spinner className=\"app-spinner dark\" />\r\n        )}\r\n    </UserProfileContext.Provider>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/steel.f6f13c33.svg\";","import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport \"./Login.css\";\r\nimport steel from \"../images/steel.svg\"\r\n\r\nconst Login = () => {\r\n  const { login, logout } = useContext(UserProfileContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    login(email, password)\r\n      .then((user) => {\r\n        setLoading(false);\r\n        user.userStatusId === 2 ? toast.info('That account in inactive', logout())\r\n          : toast.info(`Welcome back ${user.username}`, history.push(\"/\"));\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        toast.error(\"Invalid email or password\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"avatar bg-primary\">\r\n          <img src={steel} alt=\"Avatar\" />\r\n        </div>\r\n        <h2 className=\"text-center\">User Login</h2>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Button type=\"submit\" block color=\"danger\" disabled={loading}>\r\n            Sign in\r\n          </Button>\r\n        </div>\r\n        <div className=\"text-center small\">\r\n          Don't have an account?\r\n          <div>\r\n            <Link to=\"/register\">Sign up here</Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport \"./Login.css\";\r\nimport steel from \"../images/steel.svg\"\r\nconst Register = () => {\r\n  const { register } = useContext(UserProfileContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirm) {\r\n      toast.error(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    const profile = {\r\n      firstName,\r\n      lastName,\r\n      username,\r\n      email,\r\n    };\r\n    register(profile, password)\r\n      .then((user) => {\r\n        setLoading(false);\r\n        toast.info(`Welcome ${user.username}`);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        toast.error(\"Invalid email\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"avatar bg-primary\">\r\n          <img src={steel} alt=\" Avatar\" />\r\n        </div>\r\n        <h2 className=\"text-center\">User Register</h2>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setFirstName(e.target.value)}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"firstName\"\r\n            placeholder=\"First Name\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setLastName(e.target.value)}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"lastName\"\r\n            placeholder=\"Last Name\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"username\"\r\n            placeholder=\"Username\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setConfirm(e.target.value)}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"confirmPassword\"\r\n            placeholder=\"Confirm Password\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Button type=\"submit\" block color=\"danger\" disabled={loading}>\r\n            Sign Up\r\n          </Button>\r\n        </div>\r\n        <div className=\"text-center small\">\r\n          Already have an account?\r\n          <div>\r\n            <Link to=\"/login\">Log in here</Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState, createContext, useContext } from \"react\";\r\nimport { UserProfileContext } from \"./UserProfileProvider\";\r\n\r\n\r\nexport const StreakContext = createContext();\r\n\r\nexport function StreakProvider(props) {\r\n    const { getToken } = useContext(UserProfileContext)\r\n    const [streak, setStreak] = useState();\r\n\r\n    const getStreak = () => {\r\n        getToken().then((token) => {\r\n            return fetch(`/api/streak`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                setStreak(res)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <StreakContext.Provider value={{ streak, getStreak }}>\r\n            {props.children}\r\n        </StreakContext.Provider>\r\n\r\n    )\r\n}","import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Card, Col } from \"reactstrap\";\r\nimport ReactCardFlip from 'react-card-flip';\r\nimport \"./NTIQuestionCard.css\"\r\n\r\n\r\nconst NTIQuestionCard = ({ result, isFlipped, scale }) => {\r\n    // const [isFlipped, setIsFlipped] = useState(false)\r\n\r\n    const [vertFlip, setFlip] = useState(true)\r\n\r\n    // const handleClick = (e) => {\r\n    //     flipRandomizer()\r\n    //     e.preventDefault();\r\n    //     setCorrect(false);\r\n    //     setIsFlipped(!isFlipped);\r\n    // }\r\n    const convertCharIntervalToNumericInterval = (intString) => {\r\n        const correctObj = scale.find(interval => interval.stringName === intString)\r\n        return correctObj.interval;\r\n    }\r\n\r\n    const convertHalfStepsToInterval = (intString) => {\r\n        const correctObj = scale.find(interval => interval.stringName === intString)\r\n        return correctObj.interval;\r\n    }\r\n\r\n    const flipRandomizer = () => {\r\n        const num = Math.floor(Math.random() * 10)\r\n        if (num >= 4) {\r\n        } else {\r\n            setFlip(!vertFlip);\r\n        }\r\n    }\r\n    return (\r\n        <Col className=\"d-flex justify-content-center\">\r\n            <ReactCardFlip\r\n                // className=\"d-flex justify-content-center\"\r\n                isFlipped={isFlipped}\r\n                flipDirection={vertFlip ? \"vertical\" : \"horizontal\"}>\r\n                <Card className=\"gameCard d-flex justify-content-center\">\r\n                    What interval of <br />\r\n                    <h2>{result.result.root}</h2>\r\n                        is at<br />\r\n                    <h2>fret {result.questions.slice(-1)[0][0]}</h2>\r\n                        on<br />\r\n                    <h2>string {result.questions.slice(-1)[0][1] + 1}</h2>\r\n                </Card>\r\n\r\n                {//Back of car with answer\r\n                }\r\n                <Card id=\"gameCard\" className={result.outcomes ? result.outcomes.slice(-1)[0] ? \"isCorrect gameCard pt-4 d-flex justify-content-center\" : \"isIncorrect gameCard  pt-2 d-flex justify-content-center\" : null}>\r\n                    {result.outcomes ? (<>\r\n                        {result.outcomes.slice(-1)[0] ?\r\n                            <h1>Correct!</h1>\r\n                            : <h1>Incorrect!</h1>}\r\n                        <h2>fret {result.questions.slice(-2, -1)[0][0]}, string {result.questions.slice(-2, -1)[0][1] + 1}</h2>\r\n                        is the<br />\r\n                        {result.outcomes.slice(-1)[0] ?\r\n                            //display correct answer\r\n                            (\r\n                                <h2 className=\"isCorrectAns\">\r\n                                    {convertCharIntervalToNumericInterval(result.answerList.slice(-1)[0])}\r\n                                </h2>) :\r\n                            //displays incorrect and correct answer\r\n                            (\r\n                                <>\r\n                                    <h2 className=\"isIncorrectAns\">\r\n                                        {convertCharIntervalToNumericInterval(result.answerList.slice(-1)[0])}\r\n                                    </h2>\r\n                                    <h2>\r\n                                        {convertCharIntervalToNumericInterval(result.correctAnswerList.slice(-2, -1)[0])}\r\n                                    </h2>\r\n                                </>)}\r\n                        <h4>degree of {result.result.root}</h4>\r\n                    </>) : null}\r\n                </Card>\r\n            </ReactCardFlip>\r\n        </Col >\r\n\r\n        //give correct/incorrect via toast or a flipping card\r\n\r\n    )\r\n};\r\nexport default NTIQuestionCard","import React from \"react\";\r\n\r\nfunction Star({ outcome }) {\r\n    return (\r\n        <svg clastransform=\"scale(.4)\" width={170} height={175}>\r\n            <path\r\n                transform=\"translate(-4) scale(.6)\"\r\n                fill={outcome ? \"#fdff00\" : \"#808080\"}\r\n                stroke=\"#605a00\"\r\n                strokeWidth={15}\r\n                d=\"M150 25l29 86h90l-72 54 26 86-73-51-73 51 26-86-72-54h90z\"\r\n            />\r\n        </svg >\r\n    );\r\n}\r\n\r\nexport default Star;\r\n","import react from \"react\"\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Star from \"../Star\";\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst ScoreDisplay = ({ result, game, outcomes, viewResult }) => {\r\n\r\n    return (\r\n        <>\r\n            {\r\n                result.result && outcomes ?\r\n                    <>\r\n                        <h3>{result.result.tuning.name}{result.result.gameId === 1 || result.result.gameId === 2 ? `- Key of ${result.result.root}` : null}</h3>\r\n                        <Row m=\"5\">\r\n                            <Col sm={{ size: 12, order: 2, offset: 1 }} className=\"d-flex flex-nowrap\">\r\n                                {outcomes.map((outcome, i) => {\r\n                                    return <Star key={i} outcome={outcome} />\r\n                                })}\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n                    : game ? <h3>{result.result.tuning.name}{result.result.gameId === 1 || result.result.gameId === 2 ? `- Key of ${result.result.root}` : null}</h3> : viewResult ? null : <h3>Select A Key and a Tuning Then Begin</h3>\r\n            }\r\n        </>\r\n    )\r\n};\r\nexport default ScoreDisplay;","import React from \"react\";\r\nimport { Col, Input } from \"reactstrap\";\r\n\r\nconst KeySelect = ({ setKey }) => {\r\n\r\n    const handleSelect = e => {\r\n        setKey(e.target.value)\r\n    }\r\n\r\n\r\n    const keys = [\"A\", \"Bb\", \"B\", \"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\"]\r\n    return (\r\n        <Col sm=\"12\" md={{ size: 2, offset: 5 }}>\r\n            <Input type=\"select\"\r\n                name=\"keySelect\"\r\n                id=\"keySelect\"\r\n                className=\"form-select my-5\"\r\n                onChange={handleSelect}>\r\n                {keys.map(key => (\r\n                    <option value={key} key={key}>{key}</option>\r\n                ))}\r\n            </Input>\r\n        </Col>\r\n\r\n    )\r\n};\r\nexport default KeySelect;","import React, { useEffect, useState, useContext } from \"react\"\r\nimport { UserProfileContext } from \"../../providers/UserProfileProvider\";\r\nimport ScoreDisplay from \"./ScoreDisplay\"\r\n\r\nconst ResultsView = ({ result, game, viewResult }) => {\r\n    const [userProfile, setUserProfile] = useState({})\r\n    const { getCurrentUser } = useContext(UserProfileContext);\r\n\r\n    useEffect(() => {\r\n        setUserProfile(getCurrentUser())\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                result.outcomes ?\r\n                    <>\r\n                        <h3>Great job taking the time to study</h3>\r\n                        <h2> {userProfile.firstName}!</h2>\r\n                        <h4>you got {result.outcomes.filter(Boolean).length} right out of {result.outcomes.length} question</h4>\r\n                        <ScoreDisplay result={result} game={game} viewResult={viewResult} />\r\n                    </>\r\n                    : null\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default ResultsView;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Col, Input } from \"reactstrap\";\r\nimport { UserProfileContext } from \"../../providers/UserProfileProvider\";\r\n\r\nconst TuningSelect = ({ setTuning }) => {\r\n    const { getToken } = useContext(UserProfileContext);\r\n    const [tunings, setTunings] = useState()\r\n\r\n    const handleSelect = e => {\r\n        setTuning(e.target.value)\r\n    }\r\n\r\n    const getTunings = () => {\r\n        return getToken()\r\n            .then(token =>\r\n                fetch(`/api/game/tunings`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            ).then(res => res.json())\r\n            .then(res => {\r\n                setTunings(res)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTunings()\r\n    }, [])\r\n    return (\r\n        <>\r\n            {tunings ?\r\n                <Col sm=\"12\" md={{ size: 2, offset: 5 }}>\r\n                    <Input type=\"select\"\r\n                        name=\"tuningSelect\"\r\n                        id=\"tuningSelect\"\r\n                        className=\"form-select my-5\"\r\n                        onChange={handleSelect}>\r\n                        {tunings.map(tuning => (\r\n                            <option value={tuning.id} key={tuning.id}>{tuning.name}</option>\r\n                        ))}\r\n                    </Input>\r\n                </Col>\r\n                : null\r\n            }\r\n        </>\r\n    )\r\n};\r\nexport default TuningSelect;","import React, { useContext, useState } from \"react\";\r\nimport { Button, Col } from \"reactstrap\";\r\nimport \"./NTIGame.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport { StreakContext } from \"../providers/StreakProvider\";\r\nimport NTIQuestionCard from \"../components/games/NTIQuestionCard\";\r\nimport ScoreDisplay from \"../components/games/ScoreDisplay\";\r\nimport KeySelect from \"../components/games/KeySelect\";\r\nimport ResultsView from \"../components/games/ResultsView\";\r\nimport TuningSelect from \"../components/games/TuningSelect\";\r\n\r\n\r\nconst NTIGame = () => {\r\n    const { getToken } = useContext(UserProfileContext);\r\n    const { getStreak } = useContext(StreakContext)\r\n\r\n    const [game, setGame] = useState(false);\r\n    const [viewResult, setViewResult] = useState(false);\r\n    const [key, setKey] = useState(\"A\");\r\n    const [tuning, setTuning] = useState(1);\r\n    const [result, setResult] = useState({});\r\n    const [isFlipped, setIsFlipped] = useState(false);\r\n    const scale = [\r\n        { steps: 1, buttonName: \"1\", interval: \"1st\", stringName: \"One\" },\r\n        { steps: 2, buttonName: \"b2\", interval: \"b2nd\", stringName: \"FlatTwo\" },\r\n        { steps: 3, buttonName: \"2\", interval: \"2nd\", stringName: \"Two\" },\r\n        { steps: 4, buttonName: \"b3\", interval: \"b3rd\", stringName: \"FlatThree\" },\r\n        { steps: 5, buttonName: \"3\", interval: \"3rd\", stringName: \"Three\" },\r\n        { steps: 6, buttonName: \"4\", interval: \"4th\", stringName: \"Four\" },\r\n        { steps: 7, buttonName: \"b5\", interval: \"b5th\", stringName: \"FlatFive\" },\r\n        { steps: 8, buttonName: \"5\", interval: \"5th\", stringName: \"Five\" },\r\n        { steps: 9, buttonName: \"b6\", interval: \"b6th\", stringName: \"FlatSix\" },\r\n        { steps: 10, buttonName: \"6\", interval: \"6th\", stringName: \"Six\" },\r\n        { steps: 11, buttonName: \"b7\", interval: \"b7th\", stringName: \"FlatSeven\" },\r\n        { steps: 12, buttonName: \"7\", interval: \"7th\", stringName: \"Seven\" }\r\n    ]\r\n    const startGame = () => {\r\n        return getToken()\r\n            .then(token =>\r\n                fetch(`/api/game/1/${tuning}/${key}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            ).then(res => res.json())\r\n            .then(res => {\r\n                setResult(res)\r\n            })\r\n    }\r\n    const answerQuestion = (answer) => {\r\n        const gameReturn = {\r\n            resultId: result.result.id,\r\n            questionNumbers: result.questions.slice(-1).join(\",\"),\r\n            answer: answer\r\n        }\r\n        return getToken()\r\n            .then(token =>\r\n                fetch(`/api/game/`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(gameReturn)\r\n                })\r\n            ).then(res => res.json())\r\n            .then(res => {\r\n                if (res.result.complete === true) {\r\n                    setViewResult(true)\r\n                    setGame(false)\r\n                    getStreak()\r\n                }\r\n                setResult(res)\r\n            })\r\n    }\r\n\r\n    async function startHandler() {\r\n        await startGame()\r\n        setGame(true)\r\n    }\r\n\r\n    async function AnswerHandler(e) {\r\n        await answerQuestion(e.target.value)\r\n        setIsFlipped(!isFlipped)\r\n    }\r\n\r\n    return (\r\n        <div className=\"game-area\">\r\n            {viewResult ? <>\r\n                <ResultsView result={result} game={game} viewResult={viewResult} />\r\n                <Button\r\n                    onClick={() => {\r\n                        setGame(false)\r\n                        setIsFlipped(false)\r\n                        setViewResult(false)\r\n                        result.outcomes = null\r\n                    }}>\r\n                    Next\r\n                        </Button>\r\n            </> :\r\n                <>\r\n                    <div m=\"5\" className=\"score-container\">\r\n                        <ScoreDisplay result={result} game={game} outcomes={result.outcomes} viewResult={viewResult} />\r\n                    </div>\r\n                    <div className=\"card-area\">\r\n                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                            {game ?\r\n                                <NTIQuestionCard result={result} isFlipped={isFlipped} scale={scale} />\r\n                                : <>\r\n                                    <KeySelect setKey={setKey} />\r\n                                    <TuningSelect setTuning={setTuning} />\r\n                                    <Button onClick={startHandler}>Start Game</Button>\r\n                                </>\r\n                            }\r\n                        </Col>\r\n                    </div>\r\n                    <div className=\"button-container\">\r\n                        {\r\n                            isFlipped ? <Button\r\n                                onClick={() => {\r\n\r\n                                    setIsFlipped(false)\r\n                                }}>\r\n                                Next\r\n                        </Button> :\r\n\r\n                                game ?\r\n                                    scale.map(interval => (\r\n                                        <Button key={interval.steps} value={interval.stringName}\r\n                                            onClick={AnswerHandler}\r\n                                        >{interval.buttonName}</Button>\r\n                                    )) : null\r\n                        }\r\n                    </div>\r\n                </>\r\n            }\r\n        </div >\r\n    )\r\n};\r\nexport default NTIGame;","import React from \"react\";\r\n\r\nfunction Fretboard({ result, gameComponent, children }) {\r\n    return (\r\n        <svg width={1912} height={353} >\r\n            {/* fretboard */}\r\n            <path\r\n                strokeWidth={10}\r\n                stroke=\"#fff\"\r\n                d=\"M21 17h1870v318H21zM131 22v308M241 22v308M351 22v308M461 22v308M571 22v308M681 22v308M791 22v308M901 22v308m110-308v308m110-308v308m110-308v308m110-308v308m110-308v308m110-308v308m110-308v308m110-308v308m110 0\"\r\n            />\r\n            {/*12 fret club*/}\r\n            <path\r\n                d=\"M1293.442 265.077c4.214-8.822-.813-21.799-12.152-18.729-11.05 2.992-8.625 15.914-1.899 20.382-12.753-1.864-14.739-5.138-17.508-7.1v20.833c2.961-2.111 4.755-5.944 17.683-8.192-6.715 4.503-9.043 18.038 1.848 20.987 10.713 2.901 16.814-10.175 11.964-18.87 5.599 8.338 23.987 11.332 23.987-4.46 0-15.947-18.748-13.286-23.923-4.85z\"\r\n                style={{\r\n                    marker: \"none\",\r\n                }}\r\n                color=\"#000\"\r\n                fill=\"#fff\"\r\n                stroke=\"#000\"\r\n                strokeWidth={0.27165}\r\n                display=\"block\"\r\n                overflow=\"visible\"\r\n            />\r\n            {/*12 fret diamons*/}\r\n            <path\r\n                d=\"M1317.5 212.05c-9.66-5.805-18.952-12.34-27.877-18.978-8.924 6.951-18.216 13.59-27.875 18.978 9.843 5.596 19.227 11.714 27.875 18.978 8.925-7.056 18.4-13.486 27.876-18.978z\"\r\n                fill=\"red\"\r\n                fillRule=\"evenodd\"\r\n            />\r\n            <path\r\n                d=\"M1291.35 132.344c-18.708-18.321-32.278-.361-23.346 14.117-9.745-2.733-10.512-4.237-13.079-5.896v15.632c2.592-2.007 3.334-4.114 13.023-6.25-8.491 14.783 6.317 30.362 23.403 13.96 9.383-10.727 17.95-14.892 19.166-15.782-1.014-.853-9.957-5.88-19.166-15.78z\"\r\n                fill=\"#fff\"\r\n                fillRule=\"evenodd\"\r\n                stroke=\"#000\"\r\n                strokeWidth={0.17115}\r\n            />\r\n            <path\r\n                d=\"M1255.008 85.475c.093-.051.763-.273 1.49-.492 4.606-1.388 9.27-3.965 14.987-8.28 2.148-1.621 4.05-3.147 9.066-7.273 5.807-4.778 7.668-6.146 10.234-7.528 1.515-.816 3.82-1.662 5.29-1.94 1.467-.279 3.864-.283 5.113-.01 5.078 1.11 8.909 5.621 9.355 11.015.51 6.179-2.61 11.435-8.431 14.196l-1.3.617 1.027.464c1.526.69 2.558 1.354 3.845 2.475 3.278 2.854 4.884 6.251 4.89 10.343.002 1.833-.15 2.883-.644 4.445-.74 2.337-1.891 4.095-3.707 5.661-4.733 4.082-11.181 3.598-19.079-1.43-1.842-1.173-4.567-3.289-7.984-6.2-3.935-3.35-5.935-4.988-8.14-6.665-5.286-4.018-10.089-6.721-14.587-8.208-.686-.227-1.325-.464-1.42-.528-.221-.148-.224-.54-.005-.662z\"\r\n                fill=\"red\"\r\n            />\r\n            <path\r\n                d=\"M962.442 174.077c4.214-8.822-.813-21.799-12.152-18.729-11.05 2.992-8.625 15.914-1.899 20.382-12.753-1.864-14.739-5.138-17.508-7.1v20.833c2.961-2.111 4.755-5.944 17.683-8.192-6.715 4.503-9.043 18.038 1.848 20.987 10.713 2.901 16.814-10.175 11.964-18.87 5.599 8.338 23.987 11.332 23.987-4.46 0-15.947-18.748-13.286-23.923-4.85z\"\r\n                style={{\r\n                    marker: \"none\",\r\n                }}\r\n                color=\"#000\"\r\n                fill=\"#fff\"\r\n                stroke=\"#000\"\r\n                strokeWidth={0.27165}\r\n                display=\"block\"\r\n                overflow=\"visible\"\r\n            />\r\n            <path\r\n                d=\"M763.5 179.05c-9.66-5.805-18.952-12.34-27.877-18.978-8.924 6.951-18.216 13.59-27.875 18.978 9.843 5.596 19.227 11.714 27.875 18.978 8.925-7.056 18.4-13.486 27.876-18.978z\"\r\n                fill=\"red\"\r\n                fillRule=\"evenodd\"\r\n            />\r\n            <path\r\n                d=\"M528.35 162.844c-18.708-18.321-32.278-.361-23.346 14.117-9.745-2.733-10.512-4.237-13.079-5.896v15.632c2.592-2.007 3.334-4.114 13.023-6.25-8.491 14.783 6.317 30.362 23.403 13.96 9.383-10.727 17.95-14.892 19.166-15.782-1.014-.853-9.957-5.88-19.166-15.78z\"\r\n                fill=\"#fff\"\r\n                fillRule=\"evenodd\"\r\n                stroke=\"#000\"\r\n                strokeWidth={0.17115}\r\n            />\r\n            <path\r\n                d=\"M264.008 178.475c.093-.051.763-.273 1.49-.492 4.606-1.388 9.27-3.965 14.987-8.28 2.148-1.621 4.05-3.147 9.066-7.273 5.807-4.778 7.668-6.146 10.234-7.528 1.515-.816 3.82-1.662 5.29-1.94 1.467-.279 3.864-.283 5.113-.01 5.078 1.11 8.909 5.621 9.355 11.015.51 6.179-2.61 11.435-8.431 14.196l-1.3.617 1.027.464c1.526.69 2.558 1.354 3.845 2.475 3.278 2.854 4.884 6.251 4.89 10.343.002 1.833-.15 2.883-.644 4.445-.74 2.337-1.891 4.095-3.707 5.661-4.733 4.082-11.181 3.598-19.079-1.43-1.842-1.173-4.567-3.289-7.984-6.2-3.935-3.35-5.935-4.988-8.14-6.665-5.286-4.018-10.089-6.721-14.587-8.208-.686-.227-1.325-.464-1.42-.528-.221-.148-.224-.54-.005-.662z\"\r\n                fill=\"red\"\r\n            />\r\n            <path\r\n                d=\"M1840.35 162.844c-18.708-18.321-32.278-.361-23.346 14.117-9.745-2.733-10.512-4.237-13.079-5.896v15.632c2.592-2.007 3.334-4.114 13.023-6.25-8.491 14.783 6.317 30.362 23.403 13.96 9.383-10.727 17.95-14.892 19.166-15.782-1.014-.853-9.957-5.88-19.166-15.78z\"\r\n                fill=\"#fff\"\r\n                fillRule=\"evenodd\"\r\n                stroke=\"#000\"\r\n                strokeWidth={0.17115}\r\n            />\r\n            <path\r\n                d=\"M1585.008 178.475c.093-.051.763-.273 1.49-.492 4.606-1.388 9.27-3.965 14.987-8.28 2.148-1.621 4.05-3.147 9.066-7.273 5.807-4.778 7.668-6.146 10.234-7.528 1.515-.816 3.82-1.662 5.29-1.94 1.467-.279 3.864-.283 5.113-.01 5.078 1.11 8.909 5.621 9.355 11.015.51 6.179-2.61 11.435-8.431 14.196l-1.3.617 1.027.464c1.526.69 2.558 1.354 3.845 2.475 3.278 2.854 4.884 6.251 4.89 10.343.002 1.833-.15 2.883-.644 4.445-.74 2.337-1.891 4.095-3.707 5.661-4.733 4.082-11.181 3.598-19.079-1.43-1.842-1.173-4.567-3.289-7.984-6.2-3.935-3.35-5.935-4.988-8.14-6.665-5.286-4.018-10.089-6.721-14.587-8.208-.686-.227-1.325-.464-1.42-.528-.221-.148-.224-.54-.005-.662z\"\r\n                fill=\"red\"\r\n            />\r\n            {/* string */}\r\n            <path\r\n                className=\"prefix__string\"\r\n                fill=\"rgba(204,204,204,0.678)\"\r\n                d=\"M21 25h1864v5H21zM21 \r\n                59h1864v5H21zM21 \r\n                93h1864v5H21zM21 \r\n                127h1864v5H21zM21 \r\n                161h1864v5H21zM21 \r\n                195h1864v5H21zM21 \r\n                229h1864v5H21zM21 \r\n                263h1864v5H21zM21 \r\n                297h1864v5H21zM21 \r\n                331h1864v5H21zM21z\"\r\n            />\r\n            {children}\r\n        </svg>\r\n    );\r\n}\r\nexport default Fretboard;\r\n","import React from \"react\"\r\n\r\nconst DisplayQuestionDot = ({ result }) => {\r\n\r\n    if (!result.fretboard) { return null }\r\n    return (\r\n        <>\r\n            {\r\n                result.fretboard.intFretboard.map((fret, i) => {\r\n                    return fret.map((note, j) => {\r\n                        return (\r\n                            <circle\r\n                                key={`${i}-${j}`}\r\n                                id={`note--${i}-${j}`}\r\n                                cx={21 + (110 * i)} cy={25 + (34 * j)} r=\"15\"\r\n                                fill=\"#39FF14\"\r\n                                visibility={(i === result.questions.slice(-1)[0][0] && j === result.questions.slice(-1)[0][1]) ? \"visible\" : \"hidden\"}\r\n                            />\r\n\r\n                        )\r\n                    });\r\n                })\r\n            }\r\n        </>\r\n    )\r\n\r\n}\r\nexport default DisplayQuestionDot;","import React, { useContext, useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"./NTIGame.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport KeySelect from \"../components/games/KeySelect\";\r\nimport Fretboard from \"../components/games/Fretboard\";\r\nimport ScoreDisplay from \"../components/games/ScoreDisplay\";\r\nimport DisplayQuestionDot from \"../components/games/DisplayQuestionDot\";\r\nimport ResultsView from \"../components/games/ResultsView\";\r\nimport TuningSelect from \"../components/games/TuningSelect\";\r\n\r\n\r\nconst NTIFBGame = () => {\r\n    const { getToken } = useContext(UserProfileContext)\r\n    const [game, setGame] = useState(false)\r\n    const [viewResult, setViewResult] = useState(false);\r\n    const [key, setKey] = useState(\"A\")\r\n    const [tuning, setTuning] = useState(1);\r\n\r\n    const [result, setResult] = useState({})\r\n    const [isFlipped, setIsFlipped] = useState(false)\r\n    const scale = [\r\n        { steps: 1, buttonName: \"1\", interval: \"1st\", stringName: \"One\" },\r\n        { steps: 2, buttonName: \"b2\", interval: \"b2nd\", stringName: \"FlatTwo\" },\r\n        { steps: 3, buttonName: \"2\", interval: \"2nd\", stringName: \"Two\" },\r\n        { steps: 4, buttonName: \"b3\", interval: \"b3rd\", stringName: \"FlatThree\" },\r\n        { steps: 5, buttonName: \"3\", interval: \"3rd\", stringName: \"Three\" },\r\n        { steps: 6, buttonName: \"4\", interval: \"4th\", stringName: \"Four\" },\r\n        { steps: 7, buttonName: \"b5\", interval: \"b5th\", stringName: \"FlatFive\" },\r\n        { steps: 8, buttonName: \"5\", interval: \"5th\", stringName: \"Five\" },\r\n        { steps: 9, buttonName: \"b6\", interval: \"b6th\", stringName: \"FlatSix\" },\r\n        { steps: 10, buttonName: \"6\", interval: \"6th\", stringName: \"Six\" },\r\n        { steps: 11, buttonName: \"b7\", interval: \"b7th\", stringName: \"FlatSeven\" },\r\n        { steps: 12, buttonName: \"7\", interval: \"7th\", stringName: \"Seven\" }\r\n    ]\r\n\r\n    const startGame = () => {\r\n        return getToken()\r\n            .then(token =>\r\n                fetch(`/api/game/2/${tuning}/${key}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            ).then(res => res.json())\r\n            .then(res => {\r\n                setResult(res)\r\n            }\r\n            )\r\n    }\r\n    const answerQuestion = (answer) => {\r\n        const gameReturn = {\r\n            resultId: result.result.id,\r\n            questionNumbers: result.questions.slice(-1).join(\",\"),\r\n            answer: answer\r\n        }\r\n        return getToken()\r\n            .then(token =>\r\n                fetch(`/api/game/`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(gameReturn)\r\n                })\r\n            ).then(res => res.json())\r\n            .then(res => {\r\n                if (res.result.complete === true) {\r\n                    setViewResult(true)\r\n                    setGame(false)\r\n                }\r\n                setResult(res)\r\n            })\r\n    }\r\n\r\n    async function startHandler() {\r\n        await startGame()\r\n        setGame(true)\r\n    }\r\n    async function AnswerHandler(e) {\r\n        await answerQuestion(e.target.value)\r\n        setIsFlipped(!isFlipped)\r\n    }\r\n\r\n    return (\r\n        <div className=\"game-area\">\r\n            {viewResult ? <>\r\n                <ResultsView result={result} game={game} />\r\n                <Button\r\n                    onClick={() => {\r\n                        setGame(false)\r\n                        setIsFlipped(false)\r\n                        setViewResult(false)\r\n                        result.outcomes = null\r\n                    }}>\r\n                    Next\r\n                        </Button>\r\n            </> :\r\n                <>\r\n                    <div m=\"5\" className=\"score-container\">\r\n                        <ScoreDisplay result={result} game={game} outcomes={result.outcomes} />\r\n                    </div>\r\n                    <div className=\"fretboard-container\">\r\n                        {game ? null : <>\r\n                            <KeySelect setKey={setKey} />\r\n                            <TuningSelect setTuning={setTuning} />\r\n                            <Button onClick={startHandler}>Start Game</Button>\r\n                        </>\r\n                        }\r\n\r\n                        <Fretboard result={result} gameComponent={DisplayQuestionDot}><DisplayQuestionDot result={result} /></Fretboard>\r\n                    </div>\r\n                    <div className=\"button-container\">\r\n                        {\r\n                            isFlipped ? <Button onClick={() => setIsFlipped(false)}>Next</Button> :\r\n\r\n                                game ?\r\n                                    scale.map(interval => (\r\n                                        <Button key={interval.steps} value={interval.stringName}\r\n                                            onClick={AnswerHandler}\r\n                                        >{interval.buttonName}</Button>\r\n                                    )) : null\r\n                        }\r\n                    </div>\r\n                </>\r\n            }\r\n        </div >\r\n    )\r\n};\r\nexport default NTIFBGame;","import React, { useEffect, useState } from \"react\";\r\nimport \"./FindUnisonNotes.css\"\r\n\r\nfunction FindUnisonNotes({ result, answers, setAnswers, updateOutcomes }) {\r\n    const [noteTarget, setNoteTarget] = useState()\r\n\r\n    useEffect(() => {\r\n        if (result.chromaticFretboard) {\r\n            const coordinates = result.question;\r\n            const coordiNote = result.chromaticFretboard.fretboard[coordinates[0]][coordinates[1]]\r\n            setNoteTarget(coordiNote)\r\n        }\r\n    }, [result])\r\n\r\n    const handleNoteClick = e => {\r\n        e.target.style.visibility = \"visible\"\r\n        const [prefix, coords] = e.target.id.split(\"--\");\r\n        let updatedAnswers = ''\r\n        if (answers.length === 0) {\r\n            updatedAnswers = coords;\r\n        } else if (answers.length >= 1) {\r\n\r\n            updatedAnswers = answers += `,${coords}`;\r\n        }\r\n        setAnswers(updatedAnswers);\r\n        if (e.target.classList.contains(\"incorrect\")) {\r\n            updateOutcomes(false)\r\n        } else if (e.target.classList.contains(\"correct\")) {\r\n            updateOutcomes(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {result.chromaticFretboard ? result.chromaticFretboard.fretboard.map((fret, i) => {\r\n                return fret.map((note, j) => {\r\n                    return (\r\n                        <circle\r\n                            pointerEvents=\"bounding-box\"\r\n                            key={`${i}-${j}`}\r\n                            id={`note--${i},${j}`}\r\n                            className={noteTarget === result.chromaticFretboard.fretboard[i][j] ? \"correct\" : \"incorrect\"}\r\n                            //add a class correct or incorrect based on note\r\n                            cx={21 + (110 * i)} cy={25 + (34 * j)} r=\"15\"\r\n                            //change fill color based on correct incorrect\r\n                            visibility={(i === result.question[0] && j === result.question[1]) ? \"visible\" : \"hidden\"}\r\n                            // maybe saves wrong guesses or total guesses til all have been found?\r\n                            onClick={handleNoteClick}\r\n                        />\r\n                    )\r\n                });\r\n            }) : null}\r\n        </>\r\n    )\r\n}\r\nexport default FindUnisonNotes;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport Fretboard from \"../components/games/Fretboard\";\r\nimport FindUnisonNotes from \"../components/games/FindUnisonNotes\";\r\nimport ResultsView from \"../components/games/ResultsView\";\r\nimport ScoreDisplay from \"../components/games/ScoreDisplay\";\r\n\r\n\r\nconst UnisonFinderGame = () => {\r\n    const { getToken } = useContext(UserProfileContext)\r\n    const [game, setGame] = useState(false)\r\n    const [viewResult, setViewResult] = useState(false);\r\n    const [result, setResult] = useState({})\r\n    const [answers, setAnswers] = useState([])\r\n    const [outcomes, setOutcomes] = useState([])\r\n\r\n\r\n    const startGame = () => {\r\n        return getToken()\r\n            .then(token =>\r\n                fetch(`/api/game/unison`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            ).then(res => res.json())\r\n            .then(res => {\r\n                setResult(res)\r\n            })\r\n    }\r\n\r\n    const updateOutcomes = (bool) => {\r\n        const newOutcomes = outcomes.slice();\r\n        newOutcomes.push(bool)\r\n        setOutcomes(newOutcomes);\r\n    }\r\n\r\n    const submitAnswer = () => {\r\n        const gameReturn = {\r\n            resultId: result.result.id,\r\n            answer: answers\r\n        }\r\n        return getToken()\r\n            .then(token =>\r\n                fetch(`/api/game/unison`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(gameReturn)\r\n                })\r\n            ).then(res => res.json())\r\n            .then(res => {\r\n                if (res.result.complete === true) {\r\n                    setViewResult(true)\r\n                    setGame(false)\r\n                }\r\n                setResult(res)\r\n            })\r\n    }\r\n\r\n    async function startHandler() {\r\n        await startGame()\r\n        setGame(true)\r\n    }\r\n\r\n    return (\r\n        <div className=\"game-area\">\r\n            {viewResult ? <>\r\n                <ResultsView result={result} game={game} />\r\n                <Button\r\n                    onClick={() => {\r\n                        setGame(false)\r\n                        setViewResult(false)\r\n                        setAnswers([])\r\n                        setOutcomes(null)\r\n                    }}>\r\n                    Play Again\r\n                        </Button>\r\n            </> :\r\n                <>\r\n                    <div m=\"5\" className=\"score-container\">\r\n\r\n                        <ScoreDisplay result={result} game={game} outcomes={outcomes} />\r\n                    </div>\r\n                    <div className=\"fretboard-container\">\r\n                        {game ? answers.length > 0 ? null : <h2>You will be scored based on your first 10 answers</h2>\r\n                            : <>\r\n                                <Button onClick={startHandler}>Start Game</Button>\r\n                            </>\r\n                        }\r\n                        <Fretboard result={result} ><FindUnisonNotes updateOutcomes={updateOutcomes} result={result} answers={answers} setAnswers={setAnswers} /></Fretboard>\r\n                    </div>\r\n\r\n                    { answers.length > 1 ? answers.split(\",\").length > 18 ? <Button onClick={submitAnswer}>Submit</Button> : null : null}\r\n                </>\r\n            }\r\n        </div >\r\n    )\r\n};\r\nexport default UnisonFinderGame;","import { Card, CardHeader, Col, Media, Row } from \"reactstrap\"\r\nexport const ActivityFeed = ({ activity }) => {\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                activity ? activity.map(result => {\r\n                    return (<Card key={result.result.id} className=\"mt-1\">\r\n\r\n                        <CardHeader><h2 className=\"text-left\">{result.result.userProfile.username}</h2></CardHeader>\r\n                        <Row>\r\n                            <Col xs=\"4\">\r\n                                <Media src={result.result.userProfile.imageLocation} alt=\"image of user\" />\r\n                            </Col>\r\n                            <Col xs=\"6\">\r\n                                played <h3>{result.result.game.name}</h3>\r\n                                and scored <h3>{result.outcomes.filter(Boolean).length} / {result.outcomes.length}</h3>\r\n\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>)\r\n                }) : null\r\n            }\r\n        </div >\r\n\r\n\r\n\r\n\r\n    )\r\n\r\n}","import react from \"react\"\r\nimport { Card, CardHeader } from \"reactstrap\"\r\nexport const Leaderboard = ({ leaders }) => {\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                leaders ? leaders.map((obj) => {\r\n                    return (\r\n                        <Card key={obj.streak.id}>\r\n                            <CardHeader>{obj.length.totalDays} Days - {obj.streak.userProfile.username} </CardHeader>\r\n                        </Card>\r\n                    )\r\n                })\r\n                    : null\r\n            }\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n    )\r\n\r\n}","import react, { useContext, useEffect, useState } from \"react\"\r\nimport { Col, Row } from \"reactstrap\"\r\nimport { ActivityFeed } from \"../components/landingPage/ActivityFeed\"\r\nimport { Leaderboard } from \"../components/landingPage/Leaderboard\"\r\nimport { StreakContext } from \"../providers/StreakProvider\"\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\"\r\n\r\nexport const LandingPage = () => {\r\n    const { streak } = useContext(StreakContext)\r\n    const { getToken, getCurrentUser } = useContext(UserProfileContext)\r\n    const [data, setData] = useState({})\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"userProfile\")) {\r\n\r\n            loadFeedData()\r\n        }\r\n\r\n    }, [])\r\n\r\n    const loadFeedData = () => {\r\n        return getToken()\r\n            .then(token =>\r\n                fetch(`/api/streak/landingpage`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            ).then(res => res.json())\r\n            .then(res => {\r\n                setData(res)\r\n            })\r\n    }\r\n    return (\r\n        <div>\r\n            < Row >\r\n                <Col className=\"ml-2\">\r\n                    <h2>Latest Activity</h2>\r\n                    <ActivityFeed activity={data.resultsForFeed} />\r\n                </Col>\r\n                <Col>\r\n                    <Row>\r\n                        <Col sm=\"12\" md={{ size: 8, offset: 1 }}>\r\n                            <h1 >Welcome to SteelHead</h1>\r\n                            <h2>Start a daily practice streak by playing a games.</h2>\r\n                            <h4>Keep your streak going!</h4>\r\n\r\n                            <h5>Putting a little brain power into memorizing the interval relationships every day on your instrument will have lasting benefits</h5>\r\n                        </Col>\r\n                    </Row>\r\n                    <hr></hr>\r\n                    <Row>\r\n                        <h1>Longest Practice Streaks</h1>\r\n                    </Row>\r\n                    <hr></hr>\r\n                    <Leaderboard leaders={data.leaderStreaks} />\r\n                </Col>\r\n            </Row >\r\n        </div >\r\n    )\r\n}\r\n","import react from \"react\"\r\nimport { Card } from \"reactstrap\"\r\n\r\nexport const ProfileView = () => {\r\n\r\n    return (\r\n        <Card>\r\n            Welcome user\r\n        </Card>\r\n    )\r\n}","import React, { useContext } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport Login from \"../pages/Login\";\r\nimport Register from \"../pages/Register\";\r\nimport NTIGame from \"../pages/NTIGame\";\r\nimport NTIFBGame from \"../pages/NTIFBGame\";\r\nimport UnisonFinderGame from \"../pages/UnisonFinderGame\";\r\nimport { LandingPage } from \"../pages/LandingPage\";\r\nimport { ProfileView } from \"../pages/ProfileView\";\r\n\r\nconst ApplicationViews = () => {\r\n  const { isLoggedIn } = useContext(UserProfileContext);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        {isLoggedIn ? <LandingPage /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/NTIgame\">\r\n        {isLoggedIn ? <NTIGame /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/NTIFretboardGame\">\r\n        {isLoggedIn ? <NTIFBGame /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/UnisonFinderGame\">\r\n        {isLoggedIn ? <UnisonFinderGame /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/myprofile\">\r\n        {isLoggedIn ? <ProfileView /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/login\">\r\n        <Login />\r\n      </Route>\r\n      <Route path=\"/register\">\r\n        <Register />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ApplicationViews;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText,\r\n} from \"reactstrap\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport logo from \"../images/steel.svg\"\r\nimport { StreakContext } from \"../providers/StreakProvider\";\r\n\r\n\r\nconst AppHeader = () => {\r\n  const { getCurrentUser, logout } = useContext(UserProfileContext);\r\n  const { getStreak, streak } = useContext(StreakContext)\r\n  const user = getCurrentUser();\r\n  const history = useHistory();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const logoutAndReturn = () => {\r\n    return logout().then(() => {\r\n      toast.dark(\"You are now logged out\");\r\n      history.push(\"/login\");\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) { getStreak() }\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"dark\" dark expand=\"lg\" >\r\n        <NavbarBrand tag={Link} to=\"/\">\r\n          <img\r\n            id=\"header-logo\"\r\n            src={logo}\r\n            width=\"40\"\r\n            height=\"40\"\r\n            className=\"mr-1\"\r\n            alt=\"Steel Daily\"\r\n          />\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Nav className=\"d-flex justify-content-between w-100\">\r\n          <Collapse isOpen={isOpen} navbar>\r\n            <Nav navbar>\r\n              {user ? (\r\n                <>\r\n                  <NavItem>\r\n                    <NavLink to=\"/NTIgame\" tag={Link}>\r\n                      Name That Interval Flash Cards\r\n                  </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink to=\"/NTIFretboardGame\" tag={Link}>\r\n                      Name That Interval Fretboard\r\n                  </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink to=\"/UnisonFinderGame\" tag={Link}>\r\n                      Unison Finder\r\n                  </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink to=\"/myprofile\" tag={Link}>\r\n                      My Profile\r\n                  </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink tag={Link} to=\"/\" onClick={logoutAndReturn}>\r\n                      Logout\r\n                  </NavLink>\r\n                  </NavItem>\r\n                </>\r\n              ) : (\r\n                  <>\r\n                    <NavItem>\r\n                      <NavLink to=\"/login\" tag={Link}>\r\n                        Login\r\n                  </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                      <NavLink to=\"/register\" tag={Link}>\r\n                        Register\r\n                  </NavLink>\r\n                    </NavItem>\r\n                  </>\r\n                )}\r\n            </Nav>\r\n          </Collapse>\r\n          {user ? (\r\n            <Nav className=\"ml-auto d-none d-lg-flex\">\r\n              <NavbarText className=\"d-sm-none d-md-block\">\r\n                Welcome {user.firstName}\r\n              </NavbarText>\r\n              {\r\n\r\n                streak ? streak.length ?\r\n                  <NavbarText className=\"d-sm-none d-md-block\">\r\n                    - Current Streak - {streak.length.days}\r\n                  </NavbarText> : null : null\r\n              }\r\n            </Nav>\r\n          ) : null}\r\n        </Nav>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import { BrowserRouter as Router } from \"react-router-dom\";\r\nimport ApplicationViews from \"./components/ApplicationViews\";\r\nimport { UserProfileProvider } from \"./providers/UserProfileProvider\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"./App.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport AppHeader from \"./components/AppHeader\";\r\nimport { StreakProvider } from \"./providers/StreakProvider\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\r\n      <UserProfileProvider>\r\n        <StreakProvider>\r\n          <Router>\r\n            <AppHeader />\r\n            <ApplicationViews />\r\n          </Router>\r\n        </StreakProvider>\r\n      </UserProfileProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport firebase from \"firebase/app\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}