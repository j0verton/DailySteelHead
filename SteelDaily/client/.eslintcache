[{"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\index.js":"1","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\App.js":"2","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\AppHeader.js":"5","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\providers\\UserProfileProvider.js":"6","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\Login.js":"7","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\Register.js":"8","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\NTIGame.js":"9","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\NTIQuestionCard.js":"10","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\ScoreDisplay.js":"11","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\KeySelect.js":"12","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\NTIFBGame.js":"13"},{"size":703,"mtime":1612037542717,"results":"14","hashOfConfig":"15"},{"size":664,"mtime":1611868222529,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":3119,"mtime":1612408871610,"results":"18","hashOfConfig":"15"},{"size":2959,"mtime":1612408906943,"results":"19","hashOfConfig":"15"},{"size":3226,"mtime":1612062887077,"results":"20","hashOfConfig":"15"},{"size":2319,"mtime":1612038353139,"results":"21","hashOfConfig":"15"},{"size":3910,"mtime":1612038441233,"results":"22","hashOfConfig":"15"},{"size":4483,"mtime":1612390231853,"results":"23","hashOfConfig":"15"},{"size":3561,"mtime":1612402337168,"results":"24","hashOfConfig":"15"},{"size":552,"mtime":1612368604964,"results":"25","hashOfConfig":"15"},{"size":630,"mtime":1612214612896,"results":"26","hashOfConfig":"15"},{"size":335,"mtime":1612411885323,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"6lpj2d",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\index.js",[],["63","64"],"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\App.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\ApplicationViews.js",["65","66","67"],"import React, { useContext } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport Login from \"../pages/Login\";\r\nimport Register from \"../pages/Register\";\r\nimport NTIGame from \"../pages/NTIGame\";\r\nimport NTIFBGame from \"../pages/NTIFBGame\";\r\n\r\nconst ApplicationViews = () => {\r\n  const { isLoggedIn } = useContext(UserProfileContext);\r\n  const { isAdmin } = useContext(UserProfileContext);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/NTIgame\">\r\n        <NTIGame />\r\n      </Route>\r\n      <Route path=\"/NTIFretboardGame\">\r\n        <NTIFBGame />\r\n      </Route>\r\n      {/* <Route path=\"/\" exact>\r\n        {isLoggedIn ? <HomePageManager /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/explore\">\r\n        {isLoggedIn ? <Explore /> : <Redirect to=\"/login\" />}\r\n      </Route> */}\r\n      {/* <Route path=\"/approval\">\r\n        {isLoggedIn ? (\r\n          isAdmin() ? (\r\n            <Approval />\r\n          ) : (\r\n              <Redirect to=\"/\" />\r\n            )\r\n        ) : (\r\n            <Redirect to=\"/login\" />\r\n          )}\r\n      </Route> */}\r\n      {/* <Route path=\"/myprofile\">\r\n        {isLoggedIn ? <ProfileView /> : <Redirect to=\"/login\" />}\r\n      </Route> */}\r\n      {/* <Route path=\"/mypost\">\r\n        {isLoggedIn ? <MyPostList /> : <Redirect to=\"/login\" />}\r\n      </Route> */}\r\n      {/* <Route path=\"/post/edit/:id\">\r\n        {isLoggedIn ? <PostEdit /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/create/post\">\r\n        {isLoggedIn ? <PostForm /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/subscription\">\r\n        {isLoggedIn ? <Subscription /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/post/:postId\">\r\n        {isLoggedIn ? <PostDetails /> : <Redirect to=\"/login\" />}\r\n      </Route> */}\r\n      {/* <Route path=\"/categories\">\r\n        {isLoggedIn ? (\r\n          isAdmin() ? (\r\n            <CategoryManager />\r\n          ) : (\r\n              <Redirect to=\"/\" />\r\n            )\r\n        ) : (\r\n            <Redirect to=\"/login\" />\r\n          )}\r\n      </Route> */}\r\n      {/* <Route path=\"/comment/:postId\">\r\n        {isLoggedIn ? <CommentForm /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/Tags\">\r\n        {isLoggedIn ? (\r\n          isAdmin() ? (\r\n            <Tags />\r\n          ) : (\r\n              <Redirect to=\"/\" />\r\n            )\r\n        ) : (\r\n            <Redirect to=\"/login\" />\r\n          )}\r\n      </Route>\r\n      <Route path=\"/Create/Tags\">\r\n        {isLoggedIn ? <TagForm /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/profiles\">\r\n        {isLoggedIn ? (\r\n          isAdmin() ? (\r\n            <ProfileManager />\r\n          ) : (\r\n              <Redirect to=\"/\" />\r\n            )\r\n        ) : (\r\n            <Redirect to=\"/login\" />\r\n          )}\r\n      </Route> */}\r\n      <Route path=\"/login\">\r\n        <Login />\r\n      </Route>\r\n      <Route path=\"/register\">\r\n        <Register />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ApplicationViews;\r\n","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\AppHeader.js",["68","69","70","71","72"],"import React, { useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText,\r\n} from \"reactstrap\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport \"./AppHeader.css\"\r\nimport logo from \"../steel.svg\"\r\n\r\n\r\nconst AppHeader = () => {\r\n  const { getCurrentUser, logout, isAdmin } = useContext(UserProfileContext);\r\n  const user = getCurrentUser();\r\n  const history = useHistory();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const logoutAndReturn = () => {\r\n    return logout().then(() => {\r\n      toast.dark(\"You are now logged out\");\r\n      history.push(\"/login\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"dark\" dark expand=\"md\">\r\n        <NavbarBrand tag={Link} to=\"/\">\r\n          <img\r\n            id=\"header-logo\"\r\n            src={logo}\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"mr-1\"\r\n            alt=\"Steel Daily\"\r\n          />\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Nav>\r\n          <NavItem>\r\n            <NavLink to=\"/myprofile\" tag={Link}>\r\n              My Profile\r\n                  </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/NTIgame\" tag={Link}>\r\n              Name That Interval Flash Cards\r\n                  </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink to=\"/NTIFBgame\" tag={Link}>\r\n              Name That Interval Fretboard\r\n                  </NavLink>\r\n          </NavItem>\r\n          {/* <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            {user ? (\r\n              <>\r\n                <NavItem>\r\n                  <NavLink to=\"/myprofile\" tag={Link}>\r\n                    My Profile\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink tag={Link} to=\"/\" onClick={logoutAndReturn}>\r\n                    Logout\r\n                  </NavLink>\r\n                </NavItem>\r\n              </>\r\n            ) : (\r\n                <>\r\n                  <NavItem>\r\n                    <NavLink to=\"/login\" tag={Link}>\r\n                      Login\r\n                  </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink to=\"/register\" tag={Link}>\r\n                      Register\r\n                  </NavLink>\r\n                  </NavItem>\r\n                </>\r\n              )}\r\n          </Nav>\r\n          {user ? (\r\n            <NavbarText className=\"d-sm-none d-md-block\">\r\n              Welcome {user.displayName}\r\n            </NavbarText>\r\n          ) : null}\r\n        </Collapse> */}\r\n        </Nav>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\Login.js",["73"],"import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport \"./Login.css\";\r\n\r\nconst Login = () => {\r\n  const { login, logout } = useContext(UserProfileContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    login(email, password)\r\n      .then((user) => {\r\n        setLoading(false);\r\n        user.userStatusId == 2 ? toast.info('That account in inactive', logout())\r\n          : toast.info(`Welcome back ${user.displayName}`, history.push(\"/\"));\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        toast.error(\"Invalid email or password\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"avatar bg-primary\">\r\n          <img src=\"../steel.svg\" alt=\"Avatar\" />\r\n        </div>\r\n        <h2 className=\"text-center\">User Login</h2>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Button type=\"submit\" block color=\"danger\" disabled={loading}>\r\n            Sign in\r\n          </Button>\r\n        </div>\r\n        <div className=\"text-center small\">\r\n          Don't have an account?\r\n          <div>\r\n            <Link to=\"/register\">Sign up here</Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\Register.js",["74"],"import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport \"./Login.css\";\r\nimport { image } from \"../\"\r\nconst Register = () => {\r\n  const { register } = useContext(UserProfileContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirm) {\r\n      toast.error(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    const profile = {\r\n      firstName,\r\n      lastName,\r\n      displayName,\r\n      email,\r\n    };\r\n    register(profile, password)\r\n      .then((user) => {\r\n        setLoading(false);\r\n        toast.info(`Welcome ${user.displayName}`);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        toast.error(\"Invalid email\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"avatar bg-primary\">\r\n          <img src=\"\" alt=\"Avatar\" />\r\n        </div>\r\n        <h2 className=\"text-center\">User Register</h2>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setFirstName(e.target.value)}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"firstName\"\r\n            placeholder=\"First Name\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setLastName(e.target.value)}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"lastName\"\r\n            placeholder=\"Last Name\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setDisplayName(e.target.value)}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"displayName\"\r\n            placeholder=\"Display Name\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setConfirm(e.target.value)}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"confirmPassword\"\r\n            placeholder=\"Confirm Password\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Button type=\"submit\" block color=\"danger\" disabled={loading}>\r\n            Sign Up\r\n          </Button>\r\n        </div>\r\n        <div className=\"text-center small\">\r\n          Already have an account?\r\n          <div>\r\n            <Link to=\"/login\">Log in here</Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\NTIGame.js",["75","76"],"import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport NTIQuestionCard from \"../components/NTIQuestionCard\";\r\nimport ScoreDisplay from \"../components/ScoreDisplay\";\r\nimport { Button, Card, Col } from \"reactstrap\";\r\nimport \"./NTIGame.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport KeySelect from \"../components/KeySelect\";\r\n\r\n\r\nconst NTIGame = () => {\r\n    const { getToken } = useContext(UserProfileContext)\r\n    const [game, setGame] = useState(false)\r\n    const [key, setKey] = useState(\"C\")\r\n    const [result, setResult] = useState({})\r\n    const [isFlipped, setIsFlipped] = useState(false)\r\n    const scale = [\r\n        { steps: 1, buttonName: \"1\", interval: \"1st\", stringName: \"One\" },\r\n        { steps: 2, buttonName: \"b2\", interval: \"b2nd\", stringName: \"FlatTwo\" },\r\n        { steps: 3, buttonName: \"2\", interval: \"2nd\", stringName: \"Two\" },\r\n        { steps: 4, buttonName: \"b3\", interval: \"b3rd\", stringName: \"FlatThree\" },\r\n        { steps: 5, buttonName: \"3\", interval: \"3rd\", stringName: \"Three\" },\r\n        { steps: 6, buttonName: \"4\", interval: \"4th\", stringName: \"Four\" },\r\n        { steps: 7, buttonName: \"b5\", interval: \"b5th\", stringName: \"FlatFive\" },\r\n        { steps: 8, buttonName: \"5\", interval: \"5th\", stringName: \"Five\" },\r\n        { steps: 9, buttonName: \"b6\", interval: \"b6th\", stringName: \"FlatSix\" },\r\n        { steps: 10, buttonName: \"6\", interval: \"6th\", stringName: \"Six\" },\r\n        { steps: 11, buttonName: \"b7\", interval: \"b7th\", stringName: \"FlatSeven\" },\r\n        { steps: 12, buttonName: \"7\", interval: \"7th\", stringName: \"Seven\" }\r\n    ]\r\n    const startGame = () => {\r\n        return getToken()\r\n            .then(token =>\r\n                fetch(`/api/Game?key=${key}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            ).then(res => res.json())\r\n            .then(res => {\r\n                console.log(res)\r\n                setResult(res)\r\n            }\r\n            )\r\n    }\r\n    const answerQuestion = (answer) => {\r\n        const gameReturn = {\r\n            resultId: result.result.id,\r\n            questionNumbers: result.questions.slice(-1).join(\",\"),\r\n            answer: answer\r\n        }\r\n        console.log(\"game\", gameReturn)\r\n        return getToken()\r\n            .then(token =>\r\n                fetch(`/api/game/`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(gameReturn)\r\n                })\r\n            ).then(res => res.json())\r\n            .then(res => {\r\n                console.log(\"ans response\", res)\r\n                setResult(res)\r\n            })\r\n    }\r\n\r\n    async function startHandler() {\r\n        await startGame()\r\n        setGame(true)\r\n    }\r\n    async function AnswerHandler(e) {\r\n        console.log(\"answer steps\", e.target.value)\r\n        await answerQuestion(e.target.value)\r\n        setIsFlipped(!isFlipped)\r\n    }\r\n\r\n    return (\r\n        <div className=\"game-area\">\r\n            <div className=\"score-container\">\r\n                <ScoreDisplay result={result} />\r\n            </div>\r\n            <div className=\"card-area\">\r\n                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                    {game ?\r\n                        <NTIQuestionCard result={result} isFlipped={isFlipped} scale={scale} />\r\n                        : <>\r\n                            <KeySelect setKey={setKey} />\r\n                            <Button onClick={startHandler}>Start Game</Button>\r\n                        </>\r\n                    }\r\n                </Col>\r\n            </div>\r\n            <div className=\"button-container\">\r\n                {\r\n                    isFlipped ? <Button onClick={() => setIsFlipped(false)}>Next</Button> :\r\n\r\n                        scale.map(interval => (\r\n                            <Button key={interval.steps} value={interval.stringName}\r\n                                onClick={AnswerHandler}\r\n                            >{interval.buttonName}</Button>\r\n                        ))\r\n\r\n                }\r\n            </div>\r\n        </div >\r\n\r\n\r\n\r\n    )\r\n\r\n\r\n};\r\nexport default NTIGame;","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\NTIQuestionCard.js",["77","78","79","80","81"],"import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Card, Col } from \"reactstrap\";\r\nimport ReactCardFlip from 'react-card-flip';\r\nimport \"./NTIQuestionCard.css\"\r\n\r\n\r\nconst NTIQuestionCard = ({ result, isFlipped, scale }) => {\r\n    // const [isFlipped, setIsFlipped] = useState(false)\r\n\r\n    const [vertFlip, setFlip] = useState(true)\r\n\r\n    // const handleClick = (e) => {\r\n    //     flipRandomizer()\r\n    //     e.preventDefault();\r\n    //     setCorrect(false);\r\n    //     setIsFlipped(!isFlipped);\r\n    // }\r\n    const convertCharIntervalToNumericInterval = (intString) => {\r\n        const correctObj = scale.find(interval => interval.stringName === intString)\r\n        return correctObj.interval;\r\n    }\r\n\r\n    const convertHalfStepsToInterval = (intString) => {\r\n        const correctObj = scale.find(interval => interval.stringName === intString)\r\n        return correctObj.interval;\r\n    }\r\n\r\n    const flipRandomizer = () => {\r\n        const num = Math.floor(Math.random() * 10)\r\n        if (num >= 4) {\r\n            console.log(\"if\")\r\n        } else {\r\n            console.log(\"else\")\r\n\r\n            setFlip(!vertFlip);\r\n        }\r\n    }\r\n    return (\r\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n            <ReactCardFlip\r\n                isFlipped={isFlipped}\r\n                flipDirection={vertFlip ? \"vertical\" : \"horizontal\"}>\r\n                <Card className=\"gameCard\">\r\n                    What interval of <br />\r\n                    <h2>{result.result.key}</h2><br />\r\n                        is at<br />\r\n                    <h2>fret {result.questions.slice(-1)[0][0]}</h2><br />\r\n                        on the <br />\r\n                    <h2>string {result.questions.slice(-1)[0][1]}</h2>\r\n                </Card>\r\n\r\n                {//Back of car with answer\r\n                }\r\n                <Card id=\"gameCard\" className={result.outcomes ? result.outcomes.slice(-1) ? \"isCorrect\" : \"isIncorrect\" : null}>\r\n                    {result.outcomes ? (<>\r\n                        <h2>fret {result.questions.slice(-2, -1)[0][0]}</h2><br />\r\n                        on the <br />\r\n                        <h2>string {result.questions.slice(-2, -1)[0][1]}</h2>\r\n                        is the<br />\r\n                        {result.outcomes.slice(-1) ?\r\n                            //display correct answer\r\n                            (\r\n                                <h2 className=\"isCorrectAns\">\r\n                                    {convertCharIntervalToNumericInterval(result.answerList.slice(-1)[0])}\r\n                                </h2>) :\r\n                            //displays incorrect and correct answer\r\n                            (\r\n                                <>\r\n                                    <h2 className=\"isIncorrectAns\">\r\n                                        {convertCharIntervalToNumericInterval(result.answerList.slice(-1)[0])}\r\n                                    </h2>\r\n                                    <h2>\r\n                                        {convertCharIntervalToNumericInterval(result.correctAnswerList.slice(-2, -1)[0])}\r\n                                    </h2>\r\n\r\n                                </>)}\r\n                        < br />\r\n                        degree of the {result.key} scale<br />\r\n                    </>) : null}\r\n                </Card>\r\n            </ReactCardFlip>\r\n        </Col >\r\n\r\n        //give correct/incorrect via toast or a flipping card\r\n\r\n    )\r\n};\r\nexport default NTIQuestionCard","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\ScoreDisplay.js",["82"],"import react from \"react\"\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst ScoreDisplay = (result) => {\r\n\r\n    return (\r\n        <>\r\n            {\r\n                result.outcomes ?\r\n                    <>\r\n                        <span className=\"glyphicon glyphicon-star\" aria-hidden=\"true\"></span>\r\n                        <h3>{result.outcomes.filter(b => b).length}/10 Correct</h3>\r\n                    </>\r\n                    : <h3>Select A Key Then Begin</h3>\r\n            }\r\n        </>\r\n\r\n\r\n    )\r\n};\r\nexport default ScoreDisplay;","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\KeySelect.js",["83","84"],"import React, { useContext, useState } from \"react\";\r\nimport { Input } from \"reactstrap\";\r\n\r\nconst KeySelect = ({ setKey }) => {\r\n\r\n    const handleSelect = e => {\r\n        console.log(e.target.value)\r\n        setKey(e.target.value)\r\n    }\r\n\r\n\r\n    const keys = [\"A\", \"Bb\", \"B\", \"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\"]\r\n    return (\r\n        <Input type=\"select\"\r\n            name=\"keySelect\"\r\n            id=\"keySelect\"\r\n            onChange={handleSelect}>\r\n            {keys.map(key => (\r\n                <option value={key} key={key}>{key}</option>\r\n            ))}\r\n        </Input>\r\n\r\n    )\r\n};\r\nexport default KeySelect;","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\NTIFBGame.js",["85"],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":2,"column":25,"nodeType":"92","messageId":"93","endLine":2,"endColumn":33},{"ruleId":"90","severity":1,"message":"94","line":10,"column":11,"nodeType":"92","messageId":"93","endLine":10,"endColumn":21},{"ruleId":"90","severity":1,"message":"95","line":11,"column":11,"nodeType":"92","messageId":"93","endLine":11,"endColumn":18},{"ruleId":"90","severity":1,"message":"96","line":5,"column":3,"nodeType":"92","messageId":"93","endLine":5,"endColumn":11},{"ruleId":"90","severity":1,"message":"97","line":12,"column":3,"nodeType":"92","messageId":"93","endLine":12,"endColumn":13},{"ruleId":"90","severity":1,"message":"95","line":20,"column":35,"nodeType":"92","messageId":"93","endLine":20,"endColumn":42},{"ruleId":"90","severity":1,"message":"98","line":21,"column":9,"nodeType":"92","messageId":"93","endLine":21,"endColumn":13},{"ruleId":"90","severity":1,"message":"99","line":27,"column":9,"nodeType":"92","messageId":"93","endLine":27,"endColumn":24},{"ruleId":"100","severity":1,"message":"101","line":22,"column":27,"nodeType":"102","messageId":"103","endLine":22,"endColumn":29},{"ruleId":"90","severity":1,"message":"104","line":8,"column":10,"nodeType":"92","messageId":"93","endLine":8,"endColumn":15},{"ruleId":"90","severity":1,"message":"105","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":15},{"ruleId":"90","severity":1,"message":"106","line":5,"column":18,"nodeType":"92","messageId":"93","endLine":5,"endColumn":22},{"ruleId":"90","severity":1,"message":"107","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":27},{"ruleId":"90","severity":1,"message":"105","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":15},{"ruleId":"90","severity":1,"message":"108","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":16},{"ruleId":"90","severity":1,"message":"109","line":24,"column":11,"nodeType":"92","messageId":"93","endLine":24,"endColumn":37},{"ruleId":"90","severity":1,"message":"110","line":29,"column":11,"nodeType":"92","messageId":"93","endLine":29,"endColumn":25},{"ruleId":"90","severity":1,"message":"111","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":13},{"ruleId":"90","severity":1,"message":"107","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":27},{"ruleId":"90","severity":1,"message":"112","line":1,"column":29,"nodeType":"92","messageId":"93","endLine":1,"endColumn":37},{"ruleId":"113","severity":1,"message":"114","line":10,"column":17,"nodeType":"115","endLine":10,"endColumn":40},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'isLoggedIn' is assigned a value but never used.","'isAdmin' is assigned a value but never used.","'Collapse' is defined but never used.","'NavbarText' is defined but never used.","'user' is assigned a value but never used.","'logoutAndReturn' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'image' is defined but never used.","'toast' is defined but never used.","'Card' is defined but never used.","'useContext' is defined but never used.","'Button' is defined but never used.","'convertHalfStepsToInterval' is assigned a value but never used.","'flipRandomizer' is assigned a value but never used.","'react' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]