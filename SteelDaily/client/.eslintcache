[{"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\index.js":"1","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\App.js":"2","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\AppHeader.js":"5","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\providers\\UserProfileProvider.js":"6","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\Login.js":"7","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\Register.js":"8","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\NTIGame.js":"9","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\NTIQuestionCard.js":"10","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\ScoreDisplay.js":"11"},{"size":703,"mtime":1612037542717,"results":"12","hashOfConfig":"13"},{"size":664,"mtime":1611868222529,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":2997,"mtime":1612062628755,"results":"16","hashOfConfig":"13"},{"size":2780,"mtime":1612194424070,"results":"17","hashOfConfig":"13"},{"size":3226,"mtime":1612062887077,"results":"18","hashOfConfig":"13"},{"size":2319,"mtime":1612038353139,"results":"19","hashOfConfig":"13"},{"size":3910,"mtime":1612038441233,"results":"20","hashOfConfig":"13"},{"size":1305,"mtime":1612108298846,"results":"21","hashOfConfig":"13"},{"size":1894,"mtime":1612111646998,"results":"22","hashOfConfig":"13"},{"size":394,"mtime":1612063320389,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"6lpj2d",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\index.js",[],["53","54"],"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\App.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\ApplicationViews.js",["55","56","57"],"import React, { useContext } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport Login from \"../pages/Login\";\r\nimport Register from \"../pages/Register\";\r\nimport NTIGame from \"../pages/NTIGame\";\r\n\r\nconst ApplicationViews = () => {\r\n  const { isLoggedIn } = useContext(UserProfileContext);\r\n  const { isAdmin } = useContext(UserProfileContext);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/NTIgame\">\r\n        <NTIGame />\r\n      </Route>\r\n\r\n      {/* <Route path=\"/\" exact>\r\n        {isLoggedIn ? <HomePageManager /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/explore\">\r\n        {isLoggedIn ? <Explore /> : <Redirect to=\"/login\" />}\r\n      </Route> */}\r\n      {/* <Route path=\"/approval\">\r\n        {isLoggedIn ? (\r\n          isAdmin() ? (\r\n            <Approval />\r\n          ) : (\r\n              <Redirect to=\"/\" />\r\n            )\r\n        ) : (\r\n            <Redirect to=\"/login\" />\r\n          )}\r\n      </Route> */}\r\n      {/* <Route path=\"/myprofile\">\r\n        {isLoggedIn ? <ProfileView /> : <Redirect to=\"/login\" />}\r\n      </Route> */}\r\n      {/* <Route path=\"/mypost\">\r\n        {isLoggedIn ? <MyPostList /> : <Redirect to=\"/login\" />}\r\n      </Route> */}\r\n      {/* <Route path=\"/post/edit/:id\">\r\n        {isLoggedIn ? <PostEdit /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/create/post\">\r\n        {isLoggedIn ? <PostForm /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/subscription\">\r\n        {isLoggedIn ? <Subscription /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/post/:postId\">\r\n        {isLoggedIn ? <PostDetails /> : <Redirect to=\"/login\" />}\r\n      </Route> */}\r\n      {/* <Route path=\"/categories\">\r\n        {isLoggedIn ? (\r\n          isAdmin() ? (\r\n            <CategoryManager />\r\n          ) : (\r\n              <Redirect to=\"/\" />\r\n            )\r\n        ) : (\r\n            <Redirect to=\"/login\" />\r\n          )}\r\n      </Route> */}\r\n      {/* <Route path=\"/comment/:postId\">\r\n        {isLoggedIn ? <CommentForm /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/Tags\">\r\n        {isLoggedIn ? (\r\n          isAdmin() ? (\r\n            <Tags />\r\n          ) : (\r\n              <Redirect to=\"/\" />\r\n            )\r\n        ) : (\r\n            <Redirect to=\"/login\" />\r\n          )}\r\n      </Route>\r\n      <Route path=\"/Create/Tags\">\r\n        {isLoggedIn ? <TagForm /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/profiles\">\r\n        {isLoggedIn ? (\r\n          isAdmin() ? (\r\n            <ProfileManager />\r\n          ) : (\r\n              <Redirect to=\"/\" />\r\n            )\r\n        ) : (\r\n            <Redirect to=\"/login\" />\r\n          )}\r\n      </Route> */}\r\n      <Route path=\"/login\">\r\n        <Login />\r\n      </Route>\r\n      <Route path=\"/register\">\r\n        <Register />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ApplicationViews;\r\n","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\AppHeader.js",["58","59","60","61","62"],"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\Login.js",["63"],"import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport \"./Login.css\";\r\n\r\nconst Login = () => {\r\n  const { login, logout } = useContext(UserProfileContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    login(email, password)\r\n      .then((user) => {\r\n        setLoading(false);\r\n        user.userStatusId == 2 ? toast.info('That account in inactive', logout())\r\n          : toast.info(`Welcome back ${user.displayName}`, history.push(\"/\"));\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        toast.error(\"Invalid email or password\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"avatar bg-primary\">\r\n          <img src=\"../steel.svg\" alt=\"Avatar\" />\r\n        </div>\r\n        <h2 className=\"text-center\">User Login</h2>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Button type=\"submit\" block color=\"danger\" disabled={loading}>\r\n            Sign in\r\n          </Button>\r\n        </div>\r\n        <div className=\"text-center small\">\r\n          Don't have an account?\r\n          <div>\r\n            <Link to=\"/register\">Sign up here</Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\Register.js",["64"],"import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport \"./Login.css\";\r\nimport { image } from \"../\"\r\nconst Register = () => {\r\n  const { register } = useContext(UserProfileContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirm) {\r\n      toast.error(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    const profile = {\r\n      firstName,\r\n      lastName,\r\n      displayName,\r\n      email,\r\n    };\r\n    register(profile, password)\r\n      .then((user) => {\r\n        setLoading(false);\r\n        toast.info(`Welcome ${user.displayName}`);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        toast.error(\"Invalid email\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"avatar bg-primary\">\r\n          <img src=\"\" alt=\"Avatar\" />\r\n        </div>\r\n        <h2 className=\"text-center\">User Register</h2>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setFirstName(e.target.value)}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"firstName\"\r\n            placeholder=\"First Name\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setLastName(e.target.value)}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"lastName\"\r\n            placeholder=\"Last Name\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setDisplayName(e.target.value)}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"displayName\"\r\n            placeholder=\"Display Name\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Input\r\n            onChange={(e) => setConfirm(e.target.value)}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"confirmPassword\"\r\n            placeholder=\"Confirm Password\"\r\n            required=\"required\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <Button type=\"submit\" block color=\"danger\" disabled={loading}>\r\n            Sign Up\r\n          </Button>\r\n        </div>\r\n        <div className=\"text-center small\">\r\n          Already have an account?\r\n          <div>\r\n            <Link to=\"/login\">Log in here</Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\NTIGame.js",["65","66","67","68"],"import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport NTIQuestionCard from \"../components/NTIQuestionCard\";\r\nimport ScoreDisplay from \"../components/ScoreDisplay\";\r\nimport { Button, Card } from \"reactstrap\";\r\nimport \"./NTIGame.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst NTIGame = () => {\r\n\r\n\r\n    return (\r\n        <div className=\"game-area\">\r\n            <div className=\"score-container\">\r\n                <ScoreDisplay />\r\n            </div>\r\n            <div className=\"card-area\">\r\n                <NTIQuestionCard />\r\n            </div>\r\n            <div className=\"button-container\">\r\n                <Button value=\"1\">1</Button>\r\n                <Button value=\"2\">b2</Button>\r\n                <Button value=\"3\">2</Button>\r\n                <Button value=\"4\">b3</Button>\r\n                <Button value=\"5\">3</Button>\r\n                <Button value=\"6\">4</Button>\r\n                <Button value=\"7\">b5</Button>\r\n                <Button value=\"8\">5</Button>\r\n                <Button value=\"9\">b6</Button>\r\n                <Button value=\"10\">6</Button>\r\n                <Button value=\"11\">b7</Button>\r\n                <Button value=\"12\">7</Button>\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n\r\n\r\n};\r\nexport default NTIGame;","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\NTIQuestionCard.js",["69","70"],"import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Card, Col } from \"reactstrap\";\r\nimport ReactCardFlip from 'react-card-flip';\r\nimport \"./NTIQuestionCard.css\"\r\n\r\n\r\nconst NTIQuestionCard = () => {\r\n    const [isFlipped, setIsFlipped] = useState(false)\r\n    const [correct, setCorrect] = useState(true)\r\n    const [vertFlip, setFlip] = useState(true)\r\n    const handleClick = (e) => {\r\n        flipRandomizer()\r\n        e.preventDefault();\r\n        setCorrect(false);\r\n        setIsFlipped(!isFlipped);\r\n    }\r\n\r\n    const flipRandomizer = () => {\r\n        const num = Math.floor(Math.random() * 10)\r\n        if (num >= 4) {\r\n            console.log(\"if\")\r\n        } else {\r\n            console.log(\"else\")\r\n\r\n            setFlip(!vertFlip);\r\n        }\r\n    }\r\n    return (\r\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n            <ReactCardFlip\r\n                isFlipped={isFlipped}\r\n                flipDirection={vertFlip ? \"vertical\" : \"horizontal\"}>\r\n                <Card className=\"gameCard\">\r\n                    What interval of <br />\r\n                    <h2>C</h2><br />\r\n                is at the<br />\r\n                    <h2>8th fret</h2><br />\r\n                on the <br />\r\n                    <h2>8th string</h2>\r\n\r\n                </Card>\r\n                <Card className=\"gameCard\" id={correct ? \"isCorrect\" : \"isIncorrect\"}>\r\n\r\n\r\n                    <h2>8th fret</h2><br />\r\n                on the <br />\r\n                    <h2>8th string</h2>\r\n                    is the<br />\r\n                    <h2>1st</h2><br />\r\n                degree of the C scale<br />\r\n                </Card>\r\n            </ReactCardFlip>\r\n            <Button onClick={handleClick}>Flip</Button>\r\n        </Col >\r\n\r\n        //give correct/incorrect via toast or a flipping card\r\n\r\n    )\r\n};\r\nexport default NTIQuestionCard","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\ScoreDisplay.js",["71"],"import react from \"react\"\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst ScoreDisplay = () => {\r\n\r\n    return (\r\n\r\n        <>\r\n            {/* array.forEach(element => { */}\r\n            <span className=\"glyphicon glyphicon-star\" aria-hidden=\"true\"></span> Star\r\n            <h3>3/10 Correct</h3>\r\n            {/* }); */}\r\n        </>\r\n\r\n\r\n    )\r\n};\r\nexport default ScoreDisplay;",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":2,"column":25,"nodeType":"78","messageId":"79","endLine":2,"endColumn":33},{"ruleId":"76","severity":1,"message":"80","line":9,"column":11,"nodeType":"78","messageId":"79","endLine":9,"endColumn":21},{"ruleId":"76","severity":1,"message":"81","line":10,"column":11,"nodeType":"78","messageId":"79","endLine":10,"endColumn":18},{"ruleId":"76","severity":1,"message":"82","line":5,"column":3,"nodeType":"78","messageId":"79","endLine":5,"endColumn":11},{"ruleId":"76","severity":1,"message":"83","line":12,"column":3,"nodeType":"78","messageId":"79","endLine":12,"endColumn":13},{"ruleId":"76","severity":1,"message":"81","line":20,"column":35,"nodeType":"78","messageId":"79","endLine":20,"endColumn":42},{"ruleId":"76","severity":1,"message":"84","line":21,"column":9,"nodeType":"78","messageId":"79","endLine":21,"endColumn":13},{"ruleId":"76","severity":1,"message":"85","line":27,"column":9,"nodeType":"78","messageId":"79","endLine":27,"endColumn":24},{"ruleId":"86","severity":1,"message":"87","line":22,"column":27,"nodeType":"88","messageId":"89","endLine":22,"endColumn":29},{"ruleId":"76","severity":1,"message":"90","line":8,"column":10,"nodeType":"78","messageId":"79","endLine":8,"endColumn":15},{"ruleId":"76","severity":1,"message":"91","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":27},{"ruleId":"76","severity":1,"message":"92","line":1,"column":29,"nodeType":"78","messageId":"79","endLine":1,"endColumn":37},{"ruleId":"76","severity":1,"message":"93","line":2,"column":10,"nodeType":"78","messageId":"79","endLine":2,"endColumn":15},{"ruleId":"76","severity":1,"message":"94","line":5,"column":18,"nodeType":"78","messageId":"79","endLine":5,"endColumn":22},{"ruleId":"76","severity":1,"message":"91","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":27},{"ruleId":"76","severity":1,"message":"93","line":2,"column":10,"nodeType":"78","messageId":"79","endLine":2,"endColumn":15},{"ruleId":"76","severity":1,"message":"95","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":13},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'isLoggedIn' is assigned a value but never used.","'isAdmin' is assigned a value but never used.","'Collapse' is defined but never used.","'NavbarText' is defined but never used.","'user' is assigned a value but never used.","'logoutAndReturn' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'image' is defined but never used.","'useContext' is defined but never used.","'useState' is defined but never used.","'toast' is defined but never used.","'Card' is defined but never used.","'react' is defined but never used.","no-global-assign","no-unsafe-negation"]