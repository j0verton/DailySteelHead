[{"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\index.js":"1","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\App.js":"2","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\AppHeader.js":"5","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\providers\\UserProfileProvider.js":"6","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\Login.js":"7","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\Register.js":"8","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\NTIGame.js":"9","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\NTIQuestionCard.js":"10","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\ScoreDisplay.js":"11","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\KeySelect.js":"12","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\NTIFBGame.js":"13","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\Fretboard.js":"14","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\firstFretboard.js":"15","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\DisplayQuestionDot.js":"16","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\star.js":"17","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\Star.js":"18","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\ResultsView.js":"19","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\UnisonFinderGame.js":"20","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\FindUnisonNotes.js":"21","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\providers\\StreakProvider.js":"22","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\LandingPage.js":"23","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\ActivityFeed.js":"24","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\Leaderboard.js":"25","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\ProfileView.js":"26"},{"size":703,"mtime":1612037542717,"results":"27","hashOfConfig":"28"},{"size":785,"mtime":1612650728974,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"28"},{"size":1422,"mtime":1612744288902,"results":"31","hashOfConfig":"28"},{"size":3842,"mtime":1612807806624,"results":"32","hashOfConfig":"28"},{"size":3226,"mtime":1612650018589,"results":"33","hashOfConfig":"28"},{"size":2351,"mtime":1612899910797,"results":"34","hashOfConfig":"28"},{"size":3906,"mtime":1612899852120,"results":"35","hashOfConfig":"28"},{"size":5660,"mtime":1612899031293,"results":"36","hashOfConfig":"28"},{"size":3540,"mtime":1612975394401,"results":"37","hashOfConfig":"28"},{"size":1150,"mtime":1612975426495,"results":"38","hashOfConfig":"28"},{"size":743,"mtime":1612899031299,"results":"39","hashOfConfig":"28"},{"size":5347,"mtime":1612899031291,"results":"40","hashOfConfig":"28"},{"size":6615,"mtime":1612905142119,"results":"41","hashOfConfig":"28"},{"size":7552,"mtime":1612470358996,"results":"42","hashOfConfig":"43"},{"size":917,"mtime":1612899031296,"results":"44","hashOfConfig":"28"},{"size":480,"mtime":1612540406292,"results":"45","hashOfConfig":"43"},{"size":483,"mtime":1612809791333,"results":"46","hashOfConfig":"28"},{"size":990,"mtime":1612899031300,"results":"47","hashOfConfig":"28"},{"size":4747,"mtime":1612975417538,"results":"48","hashOfConfig":"28"},{"size":2538,"mtime":1612975448590,"results":"49","hashOfConfig":"28"},{"size":865,"mtime":1612975422384,"results":"50","hashOfConfig":"28"},{"size":2683,"mtime":1612975398577,"results":"51","hashOfConfig":"28"},{"size":1125,"mtime":1612975385937,"results":"52","hashOfConfig":"28"},{"size":575,"mtime":1612752386217,"results":"53","hashOfConfig":"28"},{"size":183,"mtime":1612744316840,"results":"54","hashOfConfig":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"17d58ab",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"57"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"57"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"57"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"57"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"57"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6lpj2d",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"57"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"57"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"57"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"57"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"57"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"57"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"57"},"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\index.js",[],["123","124"],"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\App.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\ApplicationViews.js",["125"],"import React, { useContext } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport Login from \"../pages/Login\";\r\nimport Register from \"../pages/Register\";\r\nimport NTIGame from \"../pages/NTIGame\";\r\nimport NTIFBGame from \"../pages/NTIFBGame\";\r\nimport UnisonFinderGame from \"../pages/UnisonFinderGame\";\r\nimport { LandingPage } from \"../pages/LandingPage\";\r\nimport { ProfileView } from \"../pages/ProfileView\";\r\n\r\nconst ApplicationViews = () => {\r\n  const { isLoggedIn, isAdmin } = useContext(UserProfileContext);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        {isLoggedIn ? <LandingPage /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/NTIgame\">\r\n        {isLoggedIn ? <NTIGame /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/NTIFretboardGame\">\r\n        {isLoggedIn ? <NTIFBGame /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/UnisonFinderGame\">\r\n        {isLoggedIn ? <UnisonFinderGame /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/myprofile\">\r\n        {isLoggedIn ? <ProfileView /> : <Redirect to=\"/login\" />}\r\n      </Route>\r\n      <Route path=\"/login\">\r\n        <Login />\r\n      </Route>\r\n      <Route path=\"/register\">\r\n        <Register />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default ApplicationViews;\r\n","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\AppHeader.js",["126","127","128"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText,\r\n} from \"reactstrap\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport logo from \"../images/steel.svg\"\r\nimport { StreakContext } from \"../providers/StreakProvider\";\r\n\r\n\r\nconst AppHeader = () => {\r\n  const { getCurrentUser, logout, isAdmin, getToken } = useContext(UserProfileContext);\r\n  const { getStreak, streak } = useContext(StreakContext)\r\n  const user = getCurrentUser();\r\n  const history = useHistory();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const logoutAndReturn = () => {\r\n    return logout().then(() => {\r\n      toast.dark(\"You are now logged out\");\r\n      history.push(\"/login\");\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) { getStreak() }\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"dark\" dark expand=\"md\" >\r\n        <NavbarBrand tag={Link} to=\"/\">\r\n          <img\r\n            id=\"header-logo\"\r\n            src={logo}\r\n            width=\"40\"\r\n            height=\"40\"\r\n            className=\"mr-1\"\r\n            alt=\"Steel Daily\"\r\n          />\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Nav className=\"d-flex justify-content-between\">\r\n          <Collapse isOpen={isOpen} navbar>\r\n            <Nav className=\"mr-auto\" navbar>\r\n              {user ? (\r\n                <>\r\n                  <NavItem>\r\n                    <NavLink to=\"/myprofile\" tag={Link}>\r\n                      My Profile\r\n                  </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink to=\"/NTIgame\" tag={Link}>\r\n                      Name That Interval Flash Cards\r\n                  </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink to=\"/NTIFretboardGame\" tag={Link}>\r\n                      Name That Interval Fretboard\r\n                  </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink to=\"/UnisonFinderGame\" tag={Link}>\r\n                      Unison Finder\r\n                  </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink to=\"/myprofile\" tag={Link}>\r\n                      My Profile\r\n                  </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink tag={Link} to=\"/\" onClick={logoutAndReturn}>\r\n                      Logout\r\n                  </NavLink>\r\n                  </NavItem>\r\n                </>\r\n              ) : (\r\n                  <>\r\n                    <NavItem>\r\n                      <NavLink to=\"/login\" tag={Link}>\r\n                        Login\r\n                  </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                      <NavLink to=\"/register\" tag={Link}>\r\n                        Register\r\n                  </NavLink>\r\n                    </NavItem>\r\n                  </>\r\n                )}\r\n            </Nav>\r\n            {user ? (\r\n              <>\r\n                <NavbarText className=\"d-sm-none d-md-block\">\r\n                  Welcome {user.firstName}\r\n                </NavbarText>\r\n                {\r\n\r\n                  streak ? streak.length ?\r\n                    <NavbarText className=\"d-sm-none d-md-block\">\r\n                      - Current Streak - {streak.length.days}\r\n                    </NavbarText> : null : null\r\n                }\r\n              </>\r\n            ) : null}\r\n          </Collapse>\r\n        </Nav>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\Login.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\Register.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\NTIGame.js",["129","130"],"import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport NTIQuestionCard from \"../components/NTIQuestionCard\";\r\nimport ScoreDisplay from \"../components/ScoreDisplay\";\r\nimport { Button, Card, Col } from \"reactstrap\";\r\nimport \"./NTIGame.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport KeySelect from \"../components/KeySelect\";\r\nimport ResultsView from \"../components/ResultsView\";\r\nimport { StreakContext } from \"../providers/StreakProvider\";\r\n\r\n\r\nconst NTIGame = () => {\r\n    const { getToken } = useContext(UserProfileContext);\r\n    const { getStreak } = useContext(StreakContext)\r\n\r\n    const [game, setGame] = useState(false);\r\n    const [viewResult, setViewResult] = useState(false);\r\n    const [key, setKey] = useState(\"A\");\r\n    const [result, setResult] = useState({});\r\n    const [isFlipped, setIsFlipped] = useState(false);\r\n    const scale = [\r\n        { steps: 1, buttonName: \"1\", interval: \"1st\", stringName: \"One\" },\r\n        { steps: 2, buttonName: \"b2\", interval: \"b2nd\", stringName: \"FlatTwo\" },\r\n        { steps: 3, buttonName: \"2\", interval: \"2nd\", stringName: \"Two\" },\r\n        { steps: 4, buttonName: \"b3\", interval: \"b3rd\", stringName: \"FlatThree\" },\r\n        { steps: 5, buttonName: \"3\", interval: \"3rd\", stringName: \"Three\" },\r\n        { steps: 6, buttonName: \"4\", interval: \"4th\", stringName: \"Four\" },\r\n        { steps: 7, buttonName: \"b5\", interval: \"b5th\", stringName: \"FlatFive\" },\r\n        { steps: 8, buttonName: \"5\", interval: \"5th\", stringName: \"Five\" },\r\n        { steps: 9, buttonName: \"b6\", interval: \"b6th\", stringName: \"FlatSix\" },\r\n        { steps: 10, buttonName: \"6\", interval: \"6th\", stringName: \"Six\" },\r\n        { steps: 11, buttonName: \"b7\", interval: \"b7th\", stringName: \"FlatSeven\" },\r\n        { steps: 12, buttonName: \"7\", interval: \"7th\", stringName: \"Seven\" }\r\n    ]\r\n    const startGame = () => {\r\n        return getToken()\r\n            .then(token =>\r\n                fetch(`/api/game/1/${key}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            ).then(res => res.json())\r\n            .then(res => {\r\n                setResult(res)\r\n            })\r\n    }\r\n    const answerQuestion = (answer) => {\r\n        const gameReturn = {\r\n            resultId: result.result.id,\r\n            questionNumbers: result.questions.slice(-1).join(\",\"),\r\n            answer: answer\r\n        }\r\n        return getToken()\r\n            .then(token =>\r\n                fetch(`/api/game/`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(gameReturn)\r\n                })\r\n            ).then(res => res.json())\r\n            .then(res => {\r\n                if (res.result.complete === true) {\r\n                    setViewResult(true)\r\n                    setGame(false)\r\n                    getStreak()\r\n                }\r\n                setResult(res)\r\n            })\r\n    }\r\n\r\n    async function startHandler() {\r\n        await startGame()\r\n        setGame(true)\r\n    }\r\n    async function AnswerHandler(e) {\r\n        await answerQuestion(e.target.value)\r\n        setIsFlipped(!isFlipped)\r\n    }\r\n\r\n    return (\r\n        <div className=\"game-area\">\r\n            {viewResult ? <>\r\n                <ResultsView result={result} game={game} />\r\n                <Button\r\n                    onClick={() => {\r\n                        setGame(false)\r\n                        setIsFlipped(false)\r\n                        setViewResult(false)\r\n                        result.outcomes = null\r\n                    }}>\r\n                    Next\r\n                        </Button>\r\n            </> :\r\n                <>\r\n                    <div m=\"5\" className=\"score-container\">\r\n                        <ScoreDisplay result={result} game={game} outcomes={result.outcomes} />\r\n                    </div>\r\n                    <div className=\"card-area\">\r\n                        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                            {game ?\r\n                                <NTIQuestionCard result={result} isFlipped={isFlipped} scale={scale} />\r\n                                : <>\r\n                                    <KeySelect setKey={setKey} />\r\n                                    <Button onClick={startHandler}>Start Game</Button>\r\n                                </>\r\n                            }\r\n                        </Col>\r\n                    </div>\r\n                    <div className=\"button-container\">\r\n                        {\r\n                            isFlipped ? <Button\r\n                                onClick={() => {\r\n\r\n                                    setIsFlipped(false)\r\n                                }}>\r\n                                Next\r\n                        </Button> :\r\n\r\n                                game ?\r\n                                    scale.map(interval => (\r\n                                        <Button key={interval.steps} value={interval.stringName}\r\n                                            onClick={AnswerHandler}\r\n                                        >{interval.buttonName}</Button>\r\n                                    )) : null\r\n                        }\r\n                    </div>\r\n                </>\r\n            }\r\n        </div >\r\n    )\r\n};\r\nexport default NTIGame;","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\NTIQuestionCard.js",["131","132","133","134","135"],"import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Card, Col } from \"reactstrap\";\r\nimport ReactCardFlip from 'react-card-flip';\r\nimport \"./NTIQuestionCard.css\"\r\n\r\n\r\nconst NTIQuestionCard = ({ result, isFlipped, scale }) => {\r\n    // const [isFlipped, setIsFlipped] = useState(false)\r\n\r\n    const [vertFlip, setFlip] = useState(true)\r\n\r\n    // const handleClick = (e) => {\r\n    //     flipRandomizer()\r\n    //     e.preventDefault();\r\n    //     setCorrect(false);\r\n    //     setIsFlipped(!isFlipped);\r\n    // }\r\n    const convertCharIntervalToNumericInterval = (intString) => {\r\n        const correctObj = scale.find(interval => interval.stringName === intString)\r\n        return correctObj.interval;\r\n    }\r\n\r\n    const convertHalfStepsToInterval = (intString) => {\r\n        const correctObj = scale.find(interval => interval.stringName === intString)\r\n        return correctObj.interval;\r\n    }\r\n\r\n    const flipRandomizer = () => {\r\n        const num = Math.floor(Math.random() * 10)\r\n        if (num >= 4) {\r\n        } else {\r\n            setFlip(!vertFlip);\r\n        }\r\n    }\r\n    return (\r\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n            <ReactCardFlip\r\n                isFlipped={isFlipped}\r\n                flipDirection={vertFlip ? \"vertical\" : \"horizontal\"}>\r\n                <Card className=\"gameCard\">\r\n                    What interval of <br />\r\n                    <h2>{result.result.key}</h2>\r\n                        is at<br />\r\n                    <h2>fret {result.questions.slice(-1)[0][0]}</h2>\r\n                        on the <br />\r\n                    <h2>string {result.questions.slice(-1)[0][1] + 1}</h2>\r\n                </Card>\r\n\r\n                {//Back of car with answer\r\n                }\r\n                <Card id=\"gameCard\" className={result.outcomes ? result.outcomes.slice(-1)[0] ? \"isCorrect\" : \"isIncorrect\" : null}>\r\n                    {result.outcomes ? (<>\r\n                        {result.outcomes.slice(-1)[0] ?\r\n                            <h1>Correct!</h1>\r\n                            : <h1>Incorrect!</h1>}\r\n                        <h2>fret {result.questions.slice(-2, -1)[0][0]}, string {result.questions.slice(-2, -1)[0][1] + 1}</h2>\r\n                        is the<br />\r\n                        {result.outcomes.slice(-1)[0] ?\r\n                            //display correct answer\r\n                            (\r\n                                <h2 className=\"isCorrectAns\">\r\n                                    {convertCharIntervalToNumericInterval(result.answerList.slice(-1)[0])}\r\n                                </h2>) :\r\n                            //displays incorrect and correct answer\r\n                            (\r\n                                <>\r\n                                    <h2 className=\"isIncorrectAns\">\r\n                                        {convertCharIntervalToNumericInterval(result.answerList.slice(-1)[0])}\r\n                                    </h2>\r\n                                    <h2>\r\n                                        {convertCharIntervalToNumericInterval(result.correctAnswerList.slice(-2, -1)[0])}\r\n                                    </h2>\r\n                                </>)}\r\n                        <h4>degree of {result.result.key}</h4>\r\n                    </>) : null}\r\n                </Card>\r\n            </ReactCardFlip>\r\n        </Col >\r\n\r\n        //give correct/incorrect via toast or a flipping card\r\n\r\n    )\r\n};\r\nexport default NTIQuestionCard","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\ScoreDisplay.js",["136"],"import react from \"react\"\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Star from \"./Star\";\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst ScoreDisplay = ({ result, game, outcomes }) => {\r\n\r\n    return (\r\n        <>\r\n            {\r\n                result.result && outcomes ?\r\n                    <>\r\n                        <h3>{result.result.tuning.name}{result.result.gameId === 1 || result.result.gameId === 2 ? `- Key of ${result.result.key}` : null}</h3>\r\n                        <Row m=\"5\">\r\n                            <Col sm={{ size: 12, order: 2, offset: 1 }} className=\"d-flex flex-nowrap\">\r\n                                {outcomes.map(outcome => {\r\n                                    return <Star outcome={outcome} />\r\n                                })}\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n                    : game ? <h3>{result.result.tuning.name}{result.result.gameId === 1 || result.result.gameId === 2 ? `- Key of ${result.result.key}` : null}</h3> : <h3>Select A Key Then Begin</h3>\r\n            }\r\n        </>\r\n    )\r\n};\r\nexport default ScoreDisplay;","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\KeySelect.js",["137","138"],"import React, { useContext, useState } from \"react\";\r\nimport { Col, Input } from \"reactstrap\";\r\n\r\nconst KeySelect = ({ setKey }) => {\r\n\r\n    const handleSelect = e => {\r\n        setKey(e.target.value)\r\n    }\r\n\r\n\r\n    const keys = [\"A\", \"Bb\", \"B\", \"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\"]\r\n    return (\r\n        <Col sm=\"12\" md={{ size: 2, offset: 5 }}>\r\n            <Input type=\"select\"\r\n                name=\"keySelect\"\r\n                id=\"keySelect\"\r\n                className=\"form-select my-5\"\r\n                onChange={handleSelect}>\r\n                {keys.map(key => (\r\n                    <option value={key} key={key}>{key}</option>\r\n                ))}\r\n            </Input>\r\n        </Col>\r\n\r\n    )\r\n};\r\nexport default KeySelect;","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\NTIFBGame.js",["139","140","141","142"],"import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport ScoreDisplay from \"../components/ScoreDisplay\";\r\nimport { Button, Card, Col } from \"reactstrap\";\r\nimport \"./NTIGame.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport KeySelect from \"../components/KeySelect\";\r\nimport fretboard from \"../images/fretboard.svg\"\r\nimport Fretboard from \"../components/Fretboard\";\r\nimport DisplayQuestionDot from \"../components/DisplayQuestionDot\";\r\nimport ResultsView from \"../components/ResultsView\";\r\n\r\n\r\nconst NTIFBGame = () => {\r\n    const { getToken } = useContext(UserProfileContext)\r\n    const [game, setGame] = useState(false)\r\n    const [viewResult, setViewResult] = useState(false);\r\n    const [key, setKey] = useState(\"A\")\r\n    const [result, setResult] = useState({})\r\n    const [isFlipped, setIsFlipped] = useState(false)\r\n    const scale = [\r\n        { steps: 1, buttonName: \"1\", interval: \"1st\", stringName: \"One\" },\r\n        { steps: 2, buttonName: \"b2\", interval: \"b2nd\", stringName: \"FlatTwo\" },\r\n        { steps: 3, buttonName: \"2\", interval: \"2nd\", stringName: \"Two\" },\r\n        { steps: 4, buttonName: \"b3\", interval: \"b3rd\", stringName: \"FlatThree\" },\r\n        { steps: 5, buttonName: \"3\", interval: \"3rd\", stringName: \"Three\" },\r\n        { steps: 6, buttonName: \"4\", interval: \"4th\", stringName: \"Four\" },\r\n        { steps: 7, buttonName: \"b5\", interval: \"b5th\", stringName: \"FlatFive\" },\r\n        { steps: 8, buttonName: \"5\", interval: \"5th\", stringName: \"Five\" },\r\n        { steps: 9, buttonName: \"b6\", interval: \"b6th\", stringName: \"FlatSix\" },\r\n        { steps: 10, buttonName: \"6\", interval: \"6th\", stringName: \"Six\" },\r\n        { steps: 11, buttonName: \"b7\", interval: \"b7th\", stringName: \"FlatSeven\" },\r\n        { steps: 12, buttonName: \"7\", interval: \"7th\", stringName: \"Seven\" }\r\n    ]\r\n\r\n    const startGame = () => {\r\n        return getToken()\r\n            .then(token =>\r\n                fetch(`/api/game/2/${key}`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            ).then(res => res.json())\r\n            .then(res => {\r\n                setResult(res)\r\n            }\r\n            )\r\n    }\r\n    const answerQuestion = (answer) => {\r\n        const gameReturn = {\r\n            resultId: result.result.id,\r\n            questionNumbers: result.questions.slice(-1).join(\",\"),\r\n            answer: answer\r\n        }\r\n        return getToken()\r\n            .then(token =>\r\n                fetch(`/api/game/`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(gameReturn)\r\n                })\r\n            ).then(res => res.json())\r\n            .then(res => {\r\n                if (res.result.complete === true) {\r\n                    setViewResult(true)\r\n                    setGame(false)\r\n                }\r\n                setResult(res)\r\n            })\r\n    }\r\n\r\n    async function startHandler() {\r\n        await startGame()\r\n        setGame(true)\r\n    }\r\n    async function AnswerHandler(e) {\r\n        await answerQuestion(e.target.value)\r\n        setIsFlipped(!isFlipped)\r\n    }\r\n\r\n    return (\r\n        <div className=\"game-area\">\r\n            {viewResult ? <>\r\n                <ResultsView result={result} game={game} />\r\n                <Button\r\n                    onClick={() => {\r\n                        setGame(false)\r\n                        setIsFlipped(false)\r\n                        setViewResult(false)\r\n                        result.outcomes = null\r\n                    }}>\r\n                    Next\r\n                        </Button>\r\n            </> :\r\n                <>\r\n                    <div m=\"5\" className=\"score-container\">\r\n                        <ScoreDisplay result={result} game={game} outcomes={result.outcomes} />\r\n                    </div>\r\n                    <div className=\"fretboard-container\">\r\n                        {game ? null : <>\r\n                            <KeySelect setKey={setKey} />\r\n                            <Button onClick={startHandler}>Start Game</Button>\r\n                        </>\r\n                        }\r\n\r\n                        <Fretboard result={result} gameComponent={DisplayQuestionDot}><DisplayQuestionDot result={result} /></Fretboard>\r\n                    </div>\r\n                    <div className=\"button-container\">\r\n                        {\r\n                            isFlipped ? <Button onClick={() => setIsFlipped(false)}>Next</Button> :\r\n\r\n                                game ?\r\n                                    scale.map(interval => (\r\n                                        <Button key={interval.steps} value={interval.stringName}\r\n                                            onClick={AnswerHandler}\r\n                                        >{interval.buttonName}</Button>\r\n                                    )) : null\r\n                        }\r\n                    </div>\r\n                </>\r\n            }\r\n        </div >\r\n    )\r\n};\r\nexport default NTIFBGame;","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\Fretboard.js",["143"],"import React, { Children } from \"react\";\r\n\r\nfunction Fretboard({ result, gameComponent, children }) {\r\n    return (\r\n        <svg width={1912} height={353} >\r\n            {/* fretboard */}\r\n            <path\r\n                strokeWidth={10}\r\n                stroke=\"#fff\"\r\n                d=\"M21 17h1870v318H21zM131 22v308M241 22v308M351 22v308M461 22v308M571 22v308M681 22v308M791 22v308M901 22v308m110-308v308m110-308v308m110-308v308m110-308v308m110-308v308m110-308v308m110-308v308m110-308v308m110 0\"\r\n            />\r\n            {/*12 fret club*/}\r\n            <path\r\n                d=\"M1293.442 265.077c4.214-8.822-.813-21.799-12.152-18.729-11.05 2.992-8.625 15.914-1.899 20.382-12.753-1.864-14.739-5.138-17.508-7.1v20.833c2.961-2.111 4.755-5.944 17.683-8.192-6.715 4.503-9.043 18.038 1.848 20.987 10.713 2.901 16.814-10.175 11.964-18.87 5.599 8.338 23.987 11.332 23.987-4.46 0-15.947-18.748-13.286-23.923-4.85z\"\r\n                style={{\r\n                    marker: \"none\",\r\n                }}\r\n                color=\"#000\"\r\n                fill=\"#fff\"\r\n                stroke=\"#000\"\r\n                strokeWidth={0.27165}\r\n                display=\"block\"\r\n                overflow=\"visible\"\r\n            />\r\n            {/*12 fret diamons*/}\r\n            <path\r\n                d=\"M1317.5 212.05c-9.66-5.805-18.952-12.34-27.877-18.978-8.924 6.951-18.216 13.59-27.875 18.978 9.843 5.596 19.227 11.714 27.875 18.978 8.925-7.056 18.4-13.486 27.876-18.978z\"\r\n                fill=\"red\"\r\n                fillRule=\"evenodd\"\r\n            />\r\n            <path\r\n                d=\"M1291.35 132.344c-18.708-18.321-32.278-.361-23.346 14.117-9.745-2.733-10.512-4.237-13.079-5.896v15.632c2.592-2.007 3.334-4.114 13.023-6.25-8.491 14.783 6.317 30.362 23.403 13.96 9.383-10.727 17.95-14.892 19.166-15.782-1.014-.853-9.957-5.88-19.166-15.78z\"\r\n                fill=\"#fff\"\r\n                fillRule=\"evenodd\"\r\n                stroke=\"#000\"\r\n                strokeWidth={0.17115}\r\n            />\r\n            <path\r\n                d=\"M1255.008 85.475c.093-.051.763-.273 1.49-.492 4.606-1.388 9.27-3.965 14.987-8.28 2.148-1.621 4.05-3.147 9.066-7.273 5.807-4.778 7.668-6.146 10.234-7.528 1.515-.816 3.82-1.662 5.29-1.94 1.467-.279 3.864-.283 5.113-.01 5.078 1.11 8.909 5.621 9.355 11.015.51 6.179-2.61 11.435-8.431 14.196l-1.3.617 1.027.464c1.526.69 2.558 1.354 3.845 2.475 3.278 2.854 4.884 6.251 4.89 10.343.002 1.833-.15 2.883-.644 4.445-.74 2.337-1.891 4.095-3.707 5.661-4.733 4.082-11.181 3.598-19.079-1.43-1.842-1.173-4.567-3.289-7.984-6.2-3.935-3.35-5.935-4.988-8.14-6.665-5.286-4.018-10.089-6.721-14.587-8.208-.686-.227-1.325-.464-1.42-.528-.221-.148-.224-.54-.005-.662z\"\r\n                fill=\"red\"\r\n            />\r\n            <path\r\n                d=\"M962.442 174.077c4.214-8.822-.813-21.799-12.152-18.729-11.05 2.992-8.625 15.914-1.899 20.382-12.753-1.864-14.739-5.138-17.508-7.1v20.833c2.961-2.111 4.755-5.944 17.683-8.192-6.715 4.503-9.043 18.038 1.848 20.987 10.713 2.901 16.814-10.175 11.964-18.87 5.599 8.338 23.987 11.332 23.987-4.46 0-15.947-18.748-13.286-23.923-4.85z\"\r\n                style={{\r\n                    marker: \"none\",\r\n                }}\r\n                color=\"#000\"\r\n                fill=\"#fff\"\r\n                stroke=\"#000\"\r\n                strokeWidth={0.27165}\r\n                display=\"block\"\r\n                overflow=\"visible\"\r\n            />\r\n            <path\r\n                d=\"M763.5 179.05c-9.66-5.805-18.952-12.34-27.877-18.978-8.924 6.951-18.216 13.59-27.875 18.978 9.843 5.596 19.227 11.714 27.875 18.978 8.925-7.056 18.4-13.486 27.876-18.978z\"\r\n                fill=\"red\"\r\n                fillRule=\"evenodd\"\r\n            />\r\n            <path\r\n                d=\"M528.35 162.844c-18.708-18.321-32.278-.361-23.346 14.117-9.745-2.733-10.512-4.237-13.079-5.896v15.632c2.592-2.007 3.334-4.114 13.023-6.25-8.491 14.783 6.317 30.362 23.403 13.96 9.383-10.727 17.95-14.892 19.166-15.782-1.014-.853-9.957-5.88-19.166-15.78z\"\r\n                fill=\"#fff\"\r\n                fillRule=\"evenodd\"\r\n                stroke=\"#000\"\r\n                strokeWidth={0.17115}\r\n            />\r\n            <path\r\n                d=\"M264.008 178.475c.093-.051.763-.273 1.49-.492 4.606-1.388 9.27-3.965 14.987-8.28 2.148-1.621 4.05-3.147 9.066-7.273 5.807-4.778 7.668-6.146 10.234-7.528 1.515-.816 3.82-1.662 5.29-1.94 1.467-.279 3.864-.283 5.113-.01 5.078 1.11 8.909 5.621 9.355 11.015.51 6.179-2.61 11.435-8.431 14.196l-1.3.617 1.027.464c1.526.69 2.558 1.354 3.845 2.475 3.278 2.854 4.884 6.251 4.89 10.343.002 1.833-.15 2.883-.644 4.445-.74 2.337-1.891 4.095-3.707 5.661-4.733 4.082-11.181 3.598-19.079-1.43-1.842-1.173-4.567-3.289-7.984-6.2-3.935-3.35-5.935-4.988-8.14-6.665-5.286-4.018-10.089-6.721-14.587-8.208-.686-.227-1.325-.464-1.42-.528-.221-.148-.224-.54-.005-.662z\"\r\n                fill=\"red\"\r\n            />\r\n            <path\r\n                d=\"M1840.35 162.844c-18.708-18.321-32.278-.361-23.346 14.117-9.745-2.733-10.512-4.237-13.079-5.896v15.632c2.592-2.007 3.334-4.114 13.023-6.25-8.491 14.783 6.317 30.362 23.403 13.96 9.383-10.727 17.95-14.892 19.166-15.782-1.014-.853-9.957-5.88-19.166-15.78z\"\r\n                fill=\"#fff\"\r\n                fillRule=\"evenodd\"\r\n                stroke=\"#000\"\r\n                strokeWidth={0.17115}\r\n            />\r\n            <path\r\n                d=\"M1585.008 178.475c.093-.051.763-.273 1.49-.492 4.606-1.388 9.27-3.965 14.987-8.28 2.148-1.621 4.05-3.147 9.066-7.273 5.807-4.778 7.668-6.146 10.234-7.528 1.515-.816 3.82-1.662 5.29-1.94 1.467-.279 3.864-.283 5.113-.01 5.078 1.11 8.909 5.621 9.355 11.015.51 6.179-2.61 11.435-8.431 14.196l-1.3.617 1.027.464c1.526.69 2.558 1.354 3.845 2.475 3.278 2.854 4.884 6.251 4.89 10.343.002 1.833-.15 2.883-.644 4.445-.74 2.337-1.891 4.095-3.707 5.661-4.733 4.082-11.181 3.598-19.079-1.43-1.842-1.173-4.567-3.289-7.984-6.2-3.935-3.35-5.935-4.988-8.14-6.665-5.286-4.018-10.089-6.721-14.587-8.208-.686-.227-1.325-.464-1.42-.528-.221-.148-.224-.54-.005-.662z\"\r\n                fill=\"red\"\r\n            />\r\n            {/* string */}\r\n            <path\r\n                className=\"prefix__string\"\r\n                fill=\"rgba(204,204,204,0.678)\"\r\n                d=\"M21 25h1864v5H21zM21 \r\n                59h1864v5H21zM21 \r\n                93h1864v5H21zM21 \r\n                127h1864v5H21zM21 \r\n                161h1864v5H21zM21 \r\n                195h1864v5H21zM21 \r\n                229h1864v5H21zM21 \r\n                263h1864v5H21zM21 \r\n                297h1864v5H21zM21 \r\n                331h1864v5H21zM21z\"\r\n            />\r\n            {children}\r\n        </svg>\r\n    );\r\n}\r\nexport default Fretboard;\r\n","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\firstFretboard.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\DisplayQuestionDot.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\star.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\Star.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\ResultsView.js",["144","145"],"import React, { useEffect, useState, useContext } from \"react\"\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport ScoreDisplay from \"./ScoreDisplay\"\r\n\r\nconst ResultsView = ({ result, game }) => {\r\n    const [userProfile, setUserProfile] = useState({})\r\n    const { getToken, getCurrentUser } = useContext(UserProfileContext);\r\n\r\n    useEffect(() => {\r\n        setUserProfile(getCurrentUser())\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                result.outcomes ?\r\n                    <>\r\n                        <h3>Great job taking the time to study</h3>\r\n                        <h2> {userProfile.firstName}!</h2>\r\n                        <h4>you got {result.outcomes.filter(Boolean).length} right out of {result.outcomes.length} question</h4>\r\n                        <ScoreDisplay result={result} game={game} />\r\n                    </>\r\n                    : null\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default ResultsView;\r\n","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\UnisonFinderGame.js",["146","147","148"],"import React, { useContext, useState } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport Fretboard from \"../components/Fretboard\";\r\nimport FindUnisonNotes from \"../components/FindUnisonNotes\";\r\nimport ResultsView from \"../components/ResultsView\";\r\nimport ScoreDisplay from \"../components/ScoreDisplay\";\r\n\r\n\r\nconst UnisonFinderGame = () => {\r\n    const { getToken } = useContext(UserProfileContext)\r\n    const [game, setGame] = useState(false)\r\n    const [viewResult, setViewResult] = useState(false);\r\n    const [key, setKey] = useState(\"A\")\r\n    const [result, setResult] = useState({})\r\n    const [answers, setAnswers] = useState([])\r\n    const [outcomes, setOutcomes] = useState([])\r\n\r\n\r\n    const startGame = () => {\r\n        return getToken()\r\n            .then(token =>\r\n                fetch(`/api/game/unison`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            ).then(res => res.json())\r\n            .then(res => {\r\n                setResult(res)\r\n            }\r\n            )\r\n    }\r\n\r\n    const updateOutcomes = (bool) => {\r\n        const newOutcomes = outcomes.slice();\r\n        newOutcomes.push(bool)\r\n        setOutcomes(newOutcomes);\r\n    }\r\n\r\n    const submitAnswer = () => {\r\n        const gameReturn = {\r\n            resultId: result.result.id,\r\n            // questionNumbers: result.questions.slice(-1).join(\",\"),\r\n            answer: answers\r\n        }\r\n        return getToken()\r\n            .then(token =>\r\n                fetch(`/api/game/unison`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify(gameReturn)\r\n                })\r\n            ).then(res => res.json())\r\n            .then(res => {\r\n                if (res.result.complete === true) {\r\n                    setViewResult(true)\r\n                    setGame(false)\r\n                }\r\n                setResult(res)\r\n            })\r\n    }\r\n\r\n    async function startHandler() {\r\n        await startGame()\r\n        setGame(true)\r\n    }\r\n    async function AnswerHandler(e) {\r\n        // await answerQuestion(e.target.value)\r\n        // setIsFlipped(!isFlipped)\r\n    }\r\n\r\n    return (\r\n        <div className=\"game-area\">\r\n            {viewResult ? <>\r\n                <ResultsView result={result} game={game} />\r\n                <Button\r\n                    onClick={() => {\r\n                        setGame(false)\r\n                        setViewResult(false)\r\n                        setAnswers([])\r\n                        setOutcomes(null)\r\n                    }}>\r\n                    Play Again\r\n                        </Button>\r\n            </> :\r\n                <>\r\n                    <div m=\"5\" className=\"score-container\">\r\n\r\n                        <ScoreDisplay result={result} game={game} outcomes={outcomes} />\r\n                    </div>\r\n                    <div className=\"fretboard-container\">\r\n                        {game ? answers.length > 0 ? null : <h2>You will be scored based on your first 10 answers</h2>\r\n                            : <>\r\n                                {/* <KeySelect setKey={setKey} /> */}\r\n                                <Button onClick={startHandler}>Start Game</Button>\r\n                            </>\r\n                        }\r\n                        {/* <FindUnisonNotes result={result} /> */}\r\n                        <Fretboard result={result} ><FindUnisonNotes updateOutcomes={updateOutcomes} result={result} answers={answers} setAnswers={setAnswers} /></Fretboard>\r\n                    </div>\r\n\r\n                    { answers.length > 9 ? <Button onClick={submitAnswer}>Submit</Button> : null}\r\n                    {/* <div className=\"button-container\">\r\n                        {\r\n                            isFlipped ? <Button onClick={() => setIsFlipped(false)}>Next</Button> :\r\n\r\n                                game ?\r\n                                    scale.map(interval => (\r\n                                        <Button key={interval.steps} value={interval.stringName}\r\n                                            onClick={AnswerHandler}\r\n                                        >{interval.buttonName}</Button>\r\n                                    )) : null\r\n                        }\r\n                    </div> */}\r\n                </>\r\n            }\r\n        </div >\r\n    )\r\n};\r\nexport default UnisonFinderGame;","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\FindUnisonNotes.js",["149","150","151"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./FindUnisonNotes.css\"\r\nfunction FindUnisonNotes({ result, answers, setAnswers, updateOutcomes }) {\r\n    const [noteTarget, setNoteTarget] = useState()\r\n    // const [answers, setAnswers] = useState([])\r\n    useEffect(() => {\r\n        if (result.chromaticFretboard) {\r\n            const coordinates = result.question;\r\n            const coordiNote = result.chromaticFretboard.fretboard[coordinates[0]][coordinates[1]]\r\n            setNoteTarget(coordiNote)\r\n        }\r\n    }, [result])\r\n    const handleNoteClick = e => {\r\n        e.target.style.visibility = \"visible\"\r\n        const [prefix, coords] = e.target.id.split(\"--\");\r\n        let updatedAnswers = ''\r\n        if (answers.length === 0) {\r\n            updatedAnswers = coords;\r\n        } else if (answers.length >= 1) {\r\n\r\n            updatedAnswers = answers += `,${coords}`;\r\n        }\r\n        setAnswers(updatedAnswers);\r\n        if (e.target.classList.contains(\"incorrect\")) {\r\n            updateOutcomes(false)\r\n        } else if (e.target.classList.contains(\"correct\")) {\r\n            updateOutcomes(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {result.chromaticFretboard ? result.chromaticFretboard.fretboard.map((fret, i) => {\r\n                return fret.map((note, j) => {\r\n                    {\r\n                        // console.log(\"noteTarget in return\", noteTarget, result.chromaticFretboard.fretboard[i][j])\r\n                    }\r\n                    return (\r\n                        <circle\r\n                            pointerEvents=\"bounding-box\"\r\n                            key={`${i}-${j}`}\r\n                            id={`note--${i},${j}`}\r\n                            className={noteTarget == result.chromaticFretboard.fretboard[i][j] ? \"correct\" : \"incorrect\"}\r\n                            //add a class correct or incorrect based on note\r\n                            cx={21 + (110 * i)} cy={25 + (34 * j)} r=\"15\"\r\n                            //change fill color based on correct incorrect\r\n                            // fill=\"#39FF14\"\r\n                            visibility={(i === result.question[0] && j === result.question[1]) ? \"visible\" : \"hidden\"}\r\n\r\n                            // maybe saves wrong guesses or total guesses til all have been found?\r\n                            onClick={handleNoteClick}\r\n                        />\r\n                    )\r\n                });\r\n            }) : null}\r\n        </>\r\n    )\r\n}\r\nexport default FindUnisonNotes;\r\n","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\providers\\StreakProvider.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\LandingPage.js",["152","153","154"],"import react, { useContext, useEffect, useState } from \"react\"\r\nimport { Col, Row } from \"reactstrap\"\r\nimport { ActivityFeed } from \"../components/ActivityFeed\"\r\nimport { Leaderboard } from \"../components/Leaderboard\"\r\nimport { StreakContext } from \"../providers/StreakProvider\"\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\"\r\n\r\nexport const LandingPage = () => {\r\n    const { streak } = useContext(StreakContext)\r\n    const { getToken, getCurrentUser } = useContext(UserProfileContext)\r\n    const [data, setData] = useState({})\r\n    useEffect(() => {\r\n        if (getCurrentUser()) {\r\n\r\n            loadFeedData()\r\n        }\r\n\r\n    }, [])\r\n\r\n    const loadFeedData = () => {\r\n        return getToken()\r\n            .then(token =>\r\n                fetch(`/api/streak/landingpage`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            ).then(res => res.json())\r\n            .then(res => {\r\n                setData(res)\r\n            })\r\n    }\r\n    return (\r\n        <div>\r\n            {/* <Row>\r\n                 <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                     <h1>Welcome to SteelHead</h1>\r\n                     <h2>Start a daily practice streak by playing one of our games.</h2>\r\n                     <h4>Keep your streak going!  </h4>\r\n                    <h4>Putting a little brain power into memorizing the interval relationships everydayon your instrument will have lasting benefits</h4>\r\n                 </Col>             </Row> */}\r\n            < Row >\r\n                <Col className=\"ml-2\">\r\n                    <h2>Latest Activity</h2>\r\n                    <ActivityFeed activity={data.resultsForFeed} />\r\n                </Col>\r\n                <Col>\r\n                    <Row>\r\n                        <Col sm=\"12\" md={{ size: 8, offset: 1 }}>\r\n                            <h1 >Welcome to SteelHead</h1>\r\n                            <h2>Start a daily practice streak by playing a games.</h2>\r\n                            <h4>Keep your streak going!</h4>\r\n\r\n                            <h5>Putting a little brain power into memorizing the interval relationships every day on your instrument will have lasting benefits</h5>\r\n                        </Col>\r\n                    </Row>\r\n                    <hr></hr>\r\n                    <Row>\r\n                        <h1>Longest Practice Streaks</h1>\r\n                    </Row>\r\n                    <hr></hr>\r\n                    <Leaderboard leaders={data.leaderStreaks} />\r\n                </Col>\r\n            </Row >\r\n        </div >\r\n    )\r\n}\r\n","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\ActivityFeed.js",["155","156","157","158","159"],"import react, { useEffect } from \"react\"\r\nimport { Card, CardBody, CardHeader, CardImg, Col, Media, Row } from \"reactstrap\"\r\nimport ScoreDisplay from \"./ScoreDisplay\"\r\nexport const ActivityFeed = ({ activity }) => {\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                activity ? activity.map(result => {\r\n                    return (<Card key={result.result.id} className=\"mt-1\">\r\n\r\n                        <CardHeader><h2 className=\"text-left\">{result.result.userProfile.username}</h2></CardHeader>\r\n                        <Row>\r\n                            <Col xs=\"4\">\r\n                                <Media src={result.result.userProfile.imageLocation} alt=\"image of user\" />\r\n                            </Col>\r\n                            <Col xs=\"6\">\r\n                                played <h3>{result.result.game.name}</h3>\r\n                                and scored <h3>{result.outcomes.filter(Boolean).length} / 10</h3>\r\n\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>)\r\n                }) : null\r\n            }\r\n        </div >\r\n\r\n\r\n\r\n\r\n    )\r\n\r\n}","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\components\\Leaderboard.js",["160"],"import react from \"react\"\r\nimport { Card, CardHeader } from \"reactstrap\"\r\nexport const Leaderboard = ({ leaders }) => {\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                leaders ? leaders.map((obj) => {\r\n                    return (\r\n                        <Card key={obj.streak.id}>\r\n                            <CardHeader>{obj.length.totalDays} Days - {obj.streak.userProfile.username} </CardHeader>\r\n                        </Card>\r\n                    )\r\n                })\r\n                    : null\r\n            }\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n    )\r\n\r\n}","C:\\Users\\Joe\\workspace\\SteelDaily\\SteelDaily\\client\\src\\pages\\ProfileView.js",["161"],"import react from \"react\"\r\nimport { Card } from \"reactstrap\"\r\n\r\nexport const ProfileView = () => {\r\n\r\n    return (\r\n        <Card>\r\n            Welcome user\r\n        </Card>\r\n    )\r\n}",{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":13,"column":23,"nodeType":"168","messageId":"169","endLine":13,"endColumn":30},{"ruleId":"166","severity":1,"message":"167","line":20,"column":35,"nodeType":"168","messageId":"169","endLine":20,"endColumn":42},{"ruleId":"166","severity":1,"message":"170","line":20,"column":44,"nodeType":"168","messageId":"169","endLine":20,"endColumn":52},{"ruleId":"171","severity":1,"message":"172","line":37,"column":6,"nodeType":"173","endLine":37,"endColumn":8,"suggestions":"174"},{"ruleId":"166","severity":1,"message":"175","line":2,"column":10,"nodeType":"168","messageId":"169","endLine":2,"endColumn":15},{"ruleId":"166","severity":1,"message":"176","line":5,"column":18,"nodeType":"168","messageId":"169","endLine":5,"endColumn":22},{"ruleId":"166","severity":1,"message":"177","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":27},{"ruleId":"166","severity":1,"message":"175","line":2,"column":10,"nodeType":"168","messageId":"169","endLine":2,"endColumn":15},{"ruleId":"166","severity":1,"message":"178","line":3,"column":10,"nodeType":"168","messageId":"169","endLine":3,"endColumn":16},{"ruleId":"166","severity":1,"message":"179","line":24,"column":11,"nodeType":"168","messageId":"169","endLine":24,"endColumn":37},{"ruleId":"166","severity":1,"message":"180","line":29,"column":11,"nodeType":"168","messageId":"169","endLine":29,"endColumn":25},{"ruleId":"166","severity":1,"message":"181","line":1,"column":8,"nodeType":"168","messageId":"169","endLine":1,"endColumn":13},{"ruleId":"166","severity":1,"message":"177","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":27},{"ruleId":"166","severity":1,"message":"182","line":1,"column":29,"nodeType":"168","messageId":"169","endLine":1,"endColumn":37},{"ruleId":"166","severity":1,"message":"175","line":2,"column":10,"nodeType":"168","messageId":"169","endLine":2,"endColumn":15},{"ruleId":"166","severity":1,"message":"176","line":4,"column":18,"nodeType":"168","messageId":"169","endLine":4,"endColumn":22},{"ruleId":"166","severity":1,"message":"183","line":4,"column":24,"nodeType":"168","messageId":"169","endLine":4,"endColumn":27},{"ruleId":"166","severity":1,"message":"184","line":9,"column":8,"nodeType":"168","messageId":"169","endLine":9,"endColumn":17},{"ruleId":"166","severity":1,"message":"185","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":25},{"ruleId":"166","severity":1,"message":"170","line":7,"column":13,"nodeType":"168","messageId":"169","endLine":7,"endColumn":21},{"ruleId":"171","severity":1,"message":"186","line":12,"column":8,"nodeType":"173","endLine":12,"endColumn":10,"suggestions":"187"},{"ruleId":"166","severity":1,"message":"188","line":15,"column":12,"nodeType":"168","messageId":"169","endLine":15,"endColumn":15},{"ruleId":"166","severity":1,"message":"189","line":15,"column":17,"nodeType":"168","messageId":"169","endLine":15,"endColumn":23},{"ruleId":"166","severity":1,"message":"190","line":73,"column":20,"nodeType":"168","messageId":"169","endLine":73,"endColumn":33},{"ruleId":"166","severity":1,"message":"191","line":15,"column":16,"nodeType":"168","messageId":"169","endLine":15,"endColumn":22},{"ruleId":"192","severity":1,"message":"193","line":35,"column":21,"nodeType":"194","messageId":"195","endLine":37,"endColumn":22},{"ruleId":"196","severity":1,"message":"197","line":43,"column":51,"nodeType":"198","messageId":"199","endLine":43,"endColumn":53},{"ruleId":"166","severity":1,"message":"181","line":1,"column":8,"nodeType":"168","messageId":"169","endLine":1,"endColumn":13},{"ruleId":"166","severity":1,"message":"200","line":9,"column":13,"nodeType":"168","messageId":"169","endLine":9,"endColumn":19},{"ruleId":"171","severity":1,"message":"201","line":18,"column":8,"nodeType":"173","endLine":18,"endColumn":10,"suggestions":"202"},{"ruleId":"166","severity":1,"message":"181","line":1,"column":8,"nodeType":"168","messageId":"169","endLine":1,"endColumn":13},{"ruleId":"166","severity":1,"message":"203","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":26},{"ruleId":"166","severity":1,"message":"204","line":2,"column":16,"nodeType":"168","messageId":"169","endLine":2,"endColumn":24},{"ruleId":"166","severity":1,"message":"205","line":2,"column":38,"nodeType":"168","messageId":"169","endLine":2,"endColumn":45},{"ruleId":"166","severity":1,"message":"206","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":20},{"ruleId":"166","severity":1,"message":"181","line":1,"column":8,"nodeType":"168","messageId":"169","endLine":1,"endColumn":13},{"ruleId":"166","severity":1,"message":"181","line":1,"column":8,"nodeType":"168","messageId":"169","endLine":1,"endColumn":13},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-unused-vars","'isAdmin' is assigned a value but never used.","Identifier","unusedVar","'getToken' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getStreak' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["209"],"'toast' is defined but never used.","'Card' is defined but never used.","'useContext' is defined but never used.","'Button' is defined but never used.","'convertHalfStepsToInterval' is assigned a value but never used.","'flipRandomizer' is assigned a value but never used.","'react' is defined but never used.","'useState' is defined but never used.","'Col' is defined but never used.","'fretboard' is defined but never used.","'Children' is defined but never used.","React Hook useEffect has a missing dependency: 'getCurrentUser'. Either include it or remove the dependency array.",["210"],"'key' is assigned a value but never used.","'setKey' is assigned a value but never used.","'AnswerHandler' is defined but never used.","'prefix' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'streak' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCurrentUser' and 'loadFeedData'. Either include them or remove the dependency array.",["211"],"'useEffect' is defined but never used.","'CardBody' is defined but never used.","'CardImg' is defined but never used.","'ScoreDisplay' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},"Update the dependencies array to be: [getStreak, user]",{"range":"218","text":"219"},"Update the dependencies array to be: [getCurrentUser]",{"range":"220","text":"221"},"Update the dependencies array to be: [getCurrentUser, loadFeedData]",{"range":"222","text":"223"},[1032,1034],"[getStreak, user]",[432,434],"[getCurrentUser]",[660,662],"[getCurrentUser, loadFeedData]"]