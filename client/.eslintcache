[{"C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\index.js":"1","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\App.js":"3","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\components\\AppHeader.js":"4","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\components\\ApplicationViews.js":"5","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\providers\\UserProfileProvider.js":"6","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\providers\\StreakProvider.js":"7","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\pages\\Login.js":"8","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\pages\\Register.js":"9","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\pages\\NTIGame.js":"10","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\pages\\NTIFBGame.js":"11","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\pages\\UnisonFinderGame.js":"12","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\pages\\ProfileView.js":"13","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\pages\\LandingPage.js":"14","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\components\\landingPage\\Leaderboard.js":"15","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\components\\landingPage\\ActivityFeed.js":"16","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\components\\games\\ScoreDisplay.js":"17","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\components\\games\\Fretboard.js":"18","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\components\\games\\KeySelect.js":"19","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\components\\games\\DisplayQuestionDot.js":"20","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\components\\games\\ResultsView.js":"21","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\components\\games\\FindUnisonNotes.js":"22","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\components\\games\\NTIQuestionCard.js":"23","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\components\\Star.js":"24"},{"size":703,"mtime":1612037542717,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":785,"mtime":1612650728974,"results":"28","hashOfConfig":"26"},{"size":3645,"mtime":1613064996276,"results":"29","hashOfConfig":"26"},{"size":1413,"mtime":1613012536252,"results":"30","hashOfConfig":"26"},{"size":3226,"mtime":1612650018589,"results":"31","hashOfConfig":"26"},{"size":865,"mtime":1612975422384,"results":"32","hashOfConfig":"26"},{"size":2351,"mtime":1612899910797,"results":"33","hashOfConfig":"26"},{"size":3906,"mtime":1612899852120,"results":"34","hashOfConfig":"26"},{"size":5637,"mtime":1613012231711,"results":"35","hashOfConfig":"26"},{"size":5276,"mtime":1613012144271,"results":"36","hashOfConfig":"26"},{"size":3776,"mtime":1613013131259,"results":"37","hashOfConfig":"26"},{"size":183,"mtime":1612744316840,"results":"38","hashOfConfig":"26"},{"size":2707,"mtime":1613011993318,"results":"39","hashOfConfig":"26"},{"size":575,"mtime":1613010046157,"results":"40","hashOfConfig":"26"},{"size":1021,"mtime":1613012053112,"results":"41","hashOfConfig":"26"},{"size":1166,"mtime":1613057266223,"results":"42","hashOfConfig":"26"},{"size":6601,"mtime":1613012639948,"results":"43","hashOfConfig":"26"},{"size":717,"mtime":1613012655418,"results":"44","hashOfConfig":"26"},{"size":917,"mtime":1613010074312,"results":"45","hashOfConfig":"26"},{"size":983,"mtime":1613012746703,"results":"46","hashOfConfig":"26"},{"size":2321,"mtime":1613012907426,"results":"47","hashOfConfig":"26"},{"size":3575,"mtime":1613065620372,"results":"48","hashOfConfig":"26"},{"size":483,"mtime":1612809791333,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"11j40n1",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\index.js",[],["107","108"],"C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\App.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\components\\AppHeader.js",["109"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText,\r\n} from \"reactstrap\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport logo from \"../images/steel.svg\"\r\nimport { StreakContext } from \"../providers/StreakProvider\";\r\n\r\n\r\nconst AppHeader = () => {\r\n  const { getCurrentUser, logout } = useContext(UserProfileContext);\r\n  const { getStreak, streak } = useContext(StreakContext)\r\n  const user = getCurrentUser();\r\n  const history = useHistory();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const logoutAndReturn = () => {\r\n    return logout().then(() => {\r\n      toast.dark(\"You are now logged out\");\r\n      history.push(\"/login\");\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) { getStreak() }\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"dark\" dark expand=\"lg\" >\r\n        <NavbarBrand tag={Link} to=\"/\">\r\n          <img\r\n            id=\"header-logo\"\r\n            src={logo}\r\n            width=\"40\"\r\n            height=\"40\"\r\n            className=\"mr-1\"\r\n            alt=\"Steel Daily\"\r\n          />\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Nav className=\"d-flex justify-content-between w-100\">\r\n          <Collapse isOpen={isOpen} navbar>\r\n            <Nav navbar>\r\n              {user ? (\r\n                <>\r\n                  <NavItem>\r\n                    <NavLink to=\"/NTIgame\" tag={Link}>\r\n                      Name That Interval Flash Cards\r\n                  </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink to=\"/NTIFretboardGame\" tag={Link}>\r\n                      Name That Interval Fretboard\r\n                  </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink to=\"/UnisonFinderGame\" tag={Link}>\r\n                      Unison Finder\r\n                  </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink to=\"/myprofile\" tag={Link}>\r\n                      My Profile\r\n                  </NavLink>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink tag={Link} to=\"/\" onClick={logoutAndReturn}>\r\n                      Logout\r\n                  </NavLink>\r\n                  </NavItem>\r\n                </>\r\n              ) : (\r\n                  <>\r\n                    <NavItem>\r\n                      <NavLink to=\"/login\" tag={Link}>\r\n                        Login\r\n                  </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                      <NavLink to=\"/register\" tag={Link}>\r\n                        Register\r\n                  </NavLink>\r\n                    </NavItem>\r\n                  </>\r\n                )}\r\n            </Nav>\r\n          </Collapse>\r\n          {user ? (\r\n            <Nav className=\"ml-auto d-none d-lg-flex\">\r\n              <NavbarText className=\"d-sm-none d-md-block\">\r\n                Welcome {user.firstName}\r\n              </NavbarText>\r\n              {\r\n\r\n                streak ? streak.length ?\r\n                  <NavbarText className=\"d-sm-none d-md-block\">\r\n                    - Current Streak - {streak.length.days}\r\n                  </NavbarText> : null : null\r\n              }\r\n            </Nav>\r\n          ) : null}\r\n        </Nav>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\components\\ApplicationViews.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\providers\\StreakProvider.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\pages\\Login.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\pages\\Register.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\pages\\NTIGame.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\pages\\NTIFBGame.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\pages\\UnisonFinderGame.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\pages\\ProfileView.js",["110"],"import react from \"react\"\r\nimport { Card } from \"reactstrap\"\r\n\r\nexport const ProfileView = () => {\r\n\r\n    return (\r\n        <Card>\r\n            Welcome user\r\n        </Card>\r\n    )\r\n}","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\pages\\LandingPage.js",["111","112","113"],"import react, { useContext, useEffect, useState } from \"react\"\r\nimport { Col, Row } from \"reactstrap\"\r\nimport { ActivityFeed } from \"../components/landingPage/ActivityFeed\"\r\nimport { Leaderboard } from \"../components/landingPage/Leaderboard\"\r\nimport { StreakContext } from \"../providers/StreakProvider\"\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\"\r\n\r\nexport const LandingPage = () => {\r\n    const { streak } = useContext(StreakContext)\r\n    const { getToken, getCurrentUser } = useContext(UserProfileContext)\r\n    const [data, setData] = useState({})\r\n    useEffect(() => {\r\n        if (getCurrentUser()) {\r\n\r\n            loadFeedData()\r\n        }\r\n\r\n    }, [])\r\n\r\n    const loadFeedData = () => {\r\n        return getToken()\r\n            .then(token =>\r\n                fetch(`/api/streak/landingpage`, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n            ).then(res => res.json())\r\n            .then(res => {\r\n                setData(res)\r\n            })\r\n    }\r\n    return (\r\n        <div>\r\n            {/* <Row>\r\n                 <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                     <h1>Welcome to SteelHead</h1>\r\n                     <h2>Start a daily practice streak by playing one of our games.</h2>\r\n                     <h4>Keep your streak going!  </h4>\r\n                    <h4>Putting a little brain power into memorizing the interval relationships everydayon your instrument will have lasting benefits</h4>\r\n                 </Col>             </Row> */}\r\n            < Row >\r\n                <Col className=\"ml-2\">\r\n                    <h2>Latest Activity</h2>\r\n                    <ActivityFeed activity={data.resultsForFeed} />\r\n                </Col>\r\n                <Col>\r\n                    <Row>\r\n                        <Col sm=\"12\" md={{ size: 8, offset: 1 }}>\r\n                            <h1 >Welcome to SteelHead</h1>\r\n                            <h2>Start a daily practice streak by playing a games.</h2>\r\n                            <h4>Keep your streak going!</h4>\r\n\r\n                            <h5>Putting a little brain power into memorizing the interval relationships every day on your instrument will have lasting benefits</h5>\r\n                        </Col>\r\n                    </Row>\r\n                    <hr></hr>\r\n                    <Row>\r\n                        <h1>Longest Practice Streaks</h1>\r\n                    </Row>\r\n                    <hr></hr>\r\n                    <Leaderboard leaders={data.leaderStreaks} />\r\n                </Col>\r\n            </Row >\r\n        </div >\r\n    )\r\n}\r\n","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\components\\landingPage\\Leaderboard.js",["114"],"import react from \"react\"\r\nimport { Card, CardHeader } from \"reactstrap\"\r\nexport const Leaderboard = ({ leaders }) => {\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                leaders ? leaders.map((obj) => {\r\n                    return (\r\n                        <Card key={obj.streak.id}>\r\n                            <CardHeader>{obj.length.totalDays} Days - {obj.streak.userProfile.username} </CardHeader>\r\n                        </Card>\r\n                    )\r\n                })\r\n                    : null\r\n            }\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n    )\r\n\r\n}","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\components\\landingPage\\ActivityFeed.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\components\\games\\ScoreDisplay.js",["115"],"import react from \"react\"\r\nimport { Col, Row } from \"reactstrap\";\r\nimport Star from \"../Star\";\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst ScoreDisplay = ({ result, game, outcomes }) => {\r\n\r\n    return (\r\n        <>\r\n            {\r\n                result.result && outcomes ?\r\n                    <>\r\n                        <h3>{result.result.tuning.name}{result.result.gameId === 1 || result.result.gameId === 2 ? `- Key of ${result.result.root}` : null}</h3>\r\n                        <Row m=\"5\">\r\n                            <Col sm={{ size: 12, order: 2, offset: 1 }} className=\"d-flex flex-nowrap\">\r\n                                {outcomes.map((outcome, i) => {\r\n                                    return <Star key={i} outcome={outcome} />\r\n                                })}\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n                    : game ? <h3>{result.result.tuning.name}{result.result.gameId === 1 || result.result.gameId === 2 ? `- Key of ${result.result.root}` : null}</h3> : <h3>Select A Key Then Begin</h3>\r\n            }\r\n        </>\r\n    )\r\n};\r\nexport default ScoreDisplay;","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\components\\games\\Fretboard.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\components\\games\\KeySelect.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\components\\games\\DisplayQuestionDot.js",[],"C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\components\\games\\ResultsView.js",["116"],"import React, { useEffect, useState, useContext } from \"react\"\r\nimport { UserProfileContext } from \"../../providers/UserProfileProvider\";\r\nimport ScoreDisplay from \"./ScoreDisplay\"\r\n\r\nconst ResultsView = ({ result, game }) => {\r\n    const [userProfile, setUserProfile] = useState({})\r\n    const { getCurrentUser } = useContext(UserProfileContext);\r\n\r\n    useEffect(() => {\r\n        setUserProfile(getCurrentUser())\r\n\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            {\r\n                result.outcomes ?\r\n                    <>\r\n                        <h3>Great job taking the time to study</h3>\r\n                        <h2> {userProfile.firstName}!</h2>\r\n                        <h4>you got {result.outcomes.filter(Boolean).length} right out of {result.outcomes.length} question</h4>\r\n                        <ScoreDisplay result={result} game={game} />\r\n                    </>\r\n                    : null\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default ResultsView;\r\n","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\components\\games\\FindUnisonNotes.js",["117"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./FindUnisonNotes.css\"\r\n\r\nfunction FindUnisonNotes({ result, answers, setAnswers, updateOutcomes }) {\r\n    const [noteTarget, setNoteTarget] = useState()\r\n\r\n    useEffect(() => {\r\n        if (result.chromaticFretboard) {\r\n            const coordinates = result.question;\r\n            const coordiNote = result.chromaticFretboard.fretboard[coordinates[0]][coordinates[1]]\r\n            setNoteTarget(coordiNote)\r\n        }\r\n    }, [result])\r\n\r\n    const handleNoteClick = e => {\r\n        e.target.style.visibility = \"visible\"\r\n        const [prefix, coords] = e.target.id.split(\"--\");\r\n        let updatedAnswers = ''\r\n        if (answers.length === 0) {\r\n            updatedAnswers = coords;\r\n        } else if (answers.length >= 1) {\r\n\r\n            updatedAnswers = answers += `,${coords}`;\r\n        }\r\n        setAnswers(updatedAnswers);\r\n        if (e.target.classList.contains(\"incorrect\")) {\r\n            updateOutcomes(false)\r\n        } else if (e.target.classList.contains(\"correct\")) {\r\n            updateOutcomes(true)\r\n        }\r\n        console.log(\"answers\", answers)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {result.chromaticFretboard ? result.chromaticFretboard.fretboard.map((fret, i) => {\r\n                return fret.map((note, j) => {\r\n                    return (\r\n                        <circle\r\n                            pointerEvents=\"bounding-box\"\r\n                            key={`${i}-${j}`}\r\n                            id={`note--${i},${j}`}\r\n                            className={noteTarget === result.chromaticFretboard.fretboard[i][j] ? \"correct\" : \"incorrect\"}\r\n                            //add a class correct or incorrect based on note\r\n                            cx={21 + (110 * i)} cy={25 + (34 * j)} r=\"15\"\r\n                            //change fill color based on correct incorrect\r\n                            visibility={(i === result.question[0] && j === result.question[1]) ? \"visible\" : \"hidden\"}\r\n                            // maybe saves wrong guesses or total guesses til all have been found?\r\n                            onClick={handleNoteClick}\r\n                        />\r\n                    )\r\n                });\r\n            }) : null}\r\n        </>\r\n    )\r\n}\r\nexport default FindUnisonNotes;\r\n","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\components\\games\\NTIQuestionCard.js",["118","119","120","121","122"],"import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Card, Col } from \"reactstrap\";\r\nimport ReactCardFlip from 'react-card-flip';\r\nimport \"./NTIQuestionCard.css\"\r\n\r\n\r\nconst NTIQuestionCard = ({ result, isFlipped, scale }) => {\r\n    // const [isFlipped, setIsFlipped] = useState(false)\r\n\r\n    const [vertFlip, setFlip] = useState(true)\r\n\r\n    // const handleClick = (e) => {\r\n    //     flipRandomizer()\r\n    //     e.preventDefault();\r\n    //     setCorrect(false);\r\n    //     setIsFlipped(!isFlipped);\r\n    // }\r\n    const convertCharIntervalToNumericInterval = (intString) => {\r\n        const correctObj = scale.find(interval => interval.stringName === intString)\r\n        return correctObj.interval;\r\n    }\r\n\r\n    const convertHalfStepsToInterval = (intString) => {\r\n        const correctObj = scale.find(interval => interval.stringName === intString)\r\n        return correctObj.interval;\r\n    }\r\n\r\n    const flipRandomizer = () => {\r\n        const num = Math.floor(Math.random() * 10)\r\n        if (num >= 4) {\r\n        } else {\r\n            setFlip(!vertFlip);\r\n        }\r\n    }\r\n    return (\r\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n            <ReactCardFlip\r\n                isFlipped={isFlipped}\r\n                flipDirection={vertFlip ? \"vertical\" : \"horizontal\"}>\r\n                <Card className=\"gameCard pt-5\">\r\n                    What interval of <br />\r\n                    <h2>{result.result.key}</h2>\r\n                        is at<br />\r\n                    <h2>fret {result.questions.slice(-1)[0][0]}</h2>\r\n                        on the <br />\r\n                    <h2>string {result.questions.slice(-1)[0][1] + 1}</h2>\r\n                </Card>\r\n\r\n                {//Back of car with answer\r\n                }\r\n                <Card id=\"gameCard\" className={result.outcomes ? result.outcomes.slice(-1)[0] ? \"isCorrect gameCard  pt-4\" : \"isIncorrect gameCard  pt-2\" : null}>\r\n                    {result.outcomes ? (<>\r\n                        {result.outcomes.slice(-1)[0] ?\r\n                            <h1>Correct!</h1>\r\n                            : <h1>Incorrect!</h1>}\r\n                        <h2>fret {result.questions.slice(-2, -1)[0][0]}, string {result.questions.slice(-2, -1)[0][1] + 1}</h2>\r\n                        is the<br />\r\n                        {result.outcomes.slice(-1)[0] ?\r\n                            //display correct answer\r\n                            (\r\n                                <h2 className=\"isCorrectAns\">\r\n                                    {convertCharIntervalToNumericInterval(result.answerList.slice(-1)[0])}\r\n                                </h2>) :\r\n                            //displays incorrect and correct answer\r\n                            (\r\n                                <>\r\n                                    <h2 className=\"isIncorrectAns\">\r\n                                        {convertCharIntervalToNumericInterval(result.answerList.slice(-1)[0])}\r\n                                    </h2>\r\n                                    <h2>\r\n                                        {convertCharIntervalToNumericInterval(result.correctAnswerList.slice(-2, -1)[0])}\r\n                                    </h2>\r\n                                </>)}\r\n                        <h4>degree of {result.result.key}</h4>\r\n                    </>) : null}\r\n                </Card>\r\n            </ReactCardFlip>\r\n        </Col >\r\n\r\n        //give correct/incorrect via toast or a flipping card\r\n\r\n    )\r\n};\r\nexport default NTIQuestionCard","C:\\Users\\Joe\\workspace\\SteelDaily\\client\\src\\components\\Star.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":37,"column":6,"nodeType":"129","endLine":37,"endColumn":8,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":13},{"ruleId":"131","severity":1,"message":"132","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":13},{"ruleId":"131","severity":1,"message":"135","line":9,"column":13,"nodeType":"133","messageId":"134","endLine":9,"endColumn":19},{"ruleId":"127","severity":1,"message":"136","line":18,"column":8,"nodeType":"129","endLine":18,"endColumn":10,"suggestions":"137"},{"ruleId":"131","severity":1,"message":"132","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":13},{"ruleId":"131","severity":1,"message":"132","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":13},{"ruleId":"127","severity":1,"message":"138","line":12,"column":8,"nodeType":"129","endLine":12,"endColumn":10,"suggestions":"139"},{"ruleId":"131","severity":1,"message":"140","line":17,"column":16,"nodeType":"133","messageId":"134","endLine":17,"endColumn":22},{"ruleId":"131","severity":1,"message":"141","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":27},{"ruleId":"131","severity":1,"message":"142","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":15},{"ruleId":"131","severity":1,"message":"143","line":3,"column":10,"nodeType":"133","messageId":"134","endLine":3,"endColumn":16},{"ruleId":"131","severity":1,"message":"144","line":24,"column":11,"nodeType":"133","messageId":"134","endLine":24,"endColumn":37},{"ruleId":"131","severity":1,"message":"145","line":29,"column":11,"nodeType":"133","messageId":"134","endLine":29,"endColumn":25},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getStreak' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["148"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'streak' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCurrentUser' and 'loadFeedData'. Either include them or remove the dependency array.",["149"],"React Hook useEffect has a missing dependency: 'getCurrentUser'. Either include it or remove the dependency array.",["150"],"'prefix' is assigned a value but never used.","'useContext' is defined but never used.","'toast' is defined but never used.","'Button' is defined but never used.","'convertHalfStepsToInterval' is assigned a value but never used.","'flipRandomizer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [getStreak, user]",{"range":"157","text":"158"},"Update the dependencies array to be: [getCurrentUser, loadFeedData]",{"range":"159","text":"160"},"Update the dependencies array to be: [getCurrentUser]",{"range":"161","text":"162"},[1013,1015],"[getStreak, user]",[684,686],"[getCurrentUser, loadFeedData]",[425,427],"[getCurrentUser]"]